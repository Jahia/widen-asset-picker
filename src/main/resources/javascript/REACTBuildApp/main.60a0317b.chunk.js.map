{"version":3,"sources":["assets/loader_4.gif","contexts/index.js","components/SearchForm/SearchForm.jsx","components/Item/Item.jsx","misc/data.js","components/Paging/component/PageLink.jsx","components/Paging/component/Nav.jsx","components/Paging/component/NavXL.jsx","components/Paging/component/ResultPerPage.jsx","components/Paging/component/PageFormLink.jsx","misc/utils.js","components/Paging/component/Sort.jsx","components/Paging/Paging.jsx","components/App.js","misc/serviceWorker.js","components/Error/Ajv.jsx","douane/lib/schema/index.js","douane/lib/config.js","douane/index.js","components/Store/Store.jsx","index.js"],"names":["StoreContext","React","createContext","SearchForm","props","useContext","state","dispatch","isLoading","handleSubmit","e","a","preventDefault","case","Form","className","onSubmit","Group","controlId","InputGroup","Control","type","name","onChange","searchQuery","target","value","payload","placeholder","Append","Button","variant","disabled","onClick","icon","Text","ImageStats","properties","locale","Object","keys","reduce","reducer","key","width","height","aspect_ratio","toLocaleString","maximumFractionDigits","VideoStats","duration","title","dateObj","Date","hours","getUTCHours","toString","padStart","minutes","getUTCMinutes","seconds","getSeconds","formatDuration","ItemStats","format","format_type","size_in_kbytes","image_properties","video_properties","isImage","isVideo","isDocument","isPdf","formatFileSize","size","getFileFormatIcon","toLowerCase","Item","item","selectedItem","thumbnails","created_date","last_update_date","filename","id","file_properties","thumbnailURL","get","options","year","month","day","hour","minute","createdDate","toLocaleDateString","updatedDate","active","src","alt","paging","searchResultPerPage","offset","searchResultPageIndex","limit","sort","searchSortBy","searchSortByDirection","searchSortListDirection","filter","sortDirectionItem","symbol","fetchSearchData","path","widenEngine","searchFacets","searchFilters","params","query","expand","response","searchResults","error","PageLink","index","href","Nav","searchResultMaxPage","Array","map","i","NavXL","dotBefore","dotAfter","ResultPerPage","Prepend","as","defaultValue","nb","PageFormLink","useState","setIndex","useEffect","getRandomString","length","mask","indexOf","result","Math","floor","random","searchSortList","sortByItem","handleClickSortBy","sortBy","DropdownButton","alignRight","label","Dropdown","Paging","searchResultAvailableAnswersCount","showForm","Sort","library","add","faKiwiBird","faVideo","faImage","fab","faSearch","faPowerOff","faCheckCircle","faThumbsUp","faBan","faTimes","faUserCheck","faUserTag","faUserCircle","faAddressCard","faCrosshairs","faChevronLeft","faChevronRight","faHashtag","faEllipsisH","faFile","faFileAlt","faSyncAlt","faPaperPlane","faSortAmountDown","faSortAmountUp","faFilePdf","faFileImage","faFileVideo","Error","message","App","context","searchAnswers","needToFetch","searchIframe","_fetchData","Container","Row","Col","spinner","Boolean","window","location","hostname","match","Ajv","errors","dataPath","description","host","default","process","workspace","enum","scope","pattern","widen","url","site","token","version","lazyLoad","JSON","parse","resultPerPage","Number","parseInt","mountPoint","required","additionalProperties","ajv","useDefaults","init","axios","create","baseURL","headers","Accept","Authorization","responseType","timeout","searchBanners","action","console","debug","log","widenPickerInterface","removeAll","data","items","total_count","ceil","facet","list","_filter","selected","slice","splice","Store","useReducer","Provider","children","_context","_data","this","contextData","load","values","d","undefined","isArray","from","product","remove","endsWith","removeAt","widenPicker","validate","schema","contextValidator","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.60a0317b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader_4.d2f7f41c.gif\";","import React from 'react';\n\nexport const StoreContext = React.createContext(null);\n","import React from 'react';\nimport {InputGroup,Form,Button} from 'react-bootstrap';\n//import PropTypes from 'prop-types';\n//import get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst SearchForm = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        isLoading\n    } = state\n\n    const handleChange = (e) => {\n        const searchQuery= e.target.value;\n        //needed if I want to enable Fuzzy search\n        dispatch({\n            case:\"UPDATE_TEXT_QUERY\",\n            payload:{\n                searchQuery\n            }\n        });\n    }\n\n    const handleReset =(e) => {\n        //e.preventDefault();\n        dispatch({\n            case:\"RESET_TEXT_QUERY\"\n        });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        dispatch({\n            case:\"EXECUTE_QUERY\"\n        });\n    }\n\n    return(\n        <Form className=\"pT4__form\" onSubmit={handleSubmit}>\n            <Form.Group controlId=\"basicSearch\">\n                {/*<Form.Label>Email address</Form.Label>*/}\n                <InputGroup className=\"mb-3\">\n                    <Form.Control\n                        type=\"text\"\n                        name=\"query\"\n                        // value={searchQuery}\n                        onChange={handleChange}\n                        placeholder=\"Que cherchez-vous ?\"\n                    />\n                    <InputGroup.Append>\n                        <Button type=\"reset\" variant=\"outline-secondary\" disabled={isLoading} onClick={handleReset}>\n                            <FontAwesomeIcon icon={['fas','times']}/>\n                        </Button>\n                    </InputGroup.Append>\n                    <InputGroup.Append>\n                        <Button type=\"submit\" variant=\"secondary\" disabled={isLoading}>\n                            <FontAwesomeIcon icon={['fas','search']}/>\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Text className=\"text-muted\">\n                    <FontAwesomeIcon icon={['fas','power-off']}/> by\n                    Jahia For Widen\n                </Form.Text>\n            </Form.Group>\n        </Form>\n    );\n}\n\nSearchForm.propTypes={}\n\nexport default SearchForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n// import {Card} from 'react-bootstrap';\nimport {StoreContext} from \"contexts\";\nimport get from \"lodash.get\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n// const Decote=({discount,price}) => {\n//\n//     const { state } = React.useContext(StoreContext);\n//     const {locale} = state\n//\n//     const [dashedPrice] = price.map( prc => Number(prc));\n//     const formatedDashedPrice = new Intl.NumberFormat(locale, { style: 'currency', currency: 'EUR' }).format(dashedPrice);\n//\n//     const [discountNumber] = discount.map( discnt => Number(discnt));\n//     const formatedDiscount = new Intl.NumberFormat(locale, { style: 'percent'}).format(-Number(discountNumber)/100)\n//\n//\n//     return(\n//         <>\n//             <span className=\"bg-danger d-block text-white font-weight-bold\">{formatedDiscount}</span>\n//             <del className=\"text-muted small mr-3\">{formatedDashedPrice}</del>\n//         </>\n//     );\n// }\n//\n// Decote.propTypes={\n//     discount:PropTypes.array.isRequired,\n//     price:PropTypes.array.isRequired\n// }\nconst ImageStats = ({properties,locale}) => {\n    // console.log(\"[ImageStats] properties : \",properties);\n\n    //reduce is used to manage case {width = null} for svg image for example\n    //default value works only for undefined\n    const {\n        width,\n        height,\n        aspect_ratio\n    } = Object.keys(properties).reduce((reducer,key) => {\n        reducer[key]= properties[key] || 'n/a';\n        return reducer;\n    },{});\n\n\n// console.log(\"ImageStats width : \",width);\n    return(\n        <ul className=\"stats\">\n            <li>\n                <strong>Width</strong> {width.toLocaleString(locale)} px\n            </li>\n            <li>\n                <strong>Height</strong> {height.toLocaleString(locale)} px\n            </li>\n            <li>\n                <strong>Ratio</strong> {aspect_ratio.toLocaleString(locale,{maximumFractionDigits:2})}\n            </li>\n        </ul>\n    )\n}\n\nconst VideoStats = ({properties,locale}) => {\n    const {\n        width,\n        height,\n        aspect_ratio,\n        duration\n    } = Object.keys(properties).reduce((reducer,key) => {\n        reducer[key]= properties[key] || 'n/a';\n        return reducer;\n    },{});\n    const formatDuration = () => {\n        if(duration === 'n/a')\n            return 'n/a';\n\n        const dateObj = new Date(duration * 1000);\n        const hours = dateObj.getUTCHours().toString().padStart(2, '0');\n        const minutes = dateObj.getUTCMinutes().toString().padStart(2, '0');\n        const seconds = dateObj.getSeconds().toString().padStart(2, '0');\n\n        return `${hours}:${minutes}:${seconds}`;\n    }\n\n    return(\n        <>\n            <ul className=\"stats\">\n                <li title={`${width.toLocaleString(locale)} px`}>\n                    <strong>Width</strong> {width.toLocaleString(locale)} px\n                </li>\n                <li title={`${height.toLocaleString(locale)} px`}>\n                    <strong>Height</strong> {height.toLocaleString(locale)} px\n                </li>\n                <li>\n                    <strong>Ratio</strong> {aspect_ratio && aspect_ratio.toLocaleString(locale,{maximumFractionDigits:2})}\n                </li>\n            </ul>\n            <ul className=\"stats\">\n                <li className=\"w-100\">\n                    <strong>Duration</strong> {formatDuration()}\n                </li>\n            </ul>\n        </>\n    )\n}\n\n\nconst ItemStats = ({properties}) => {\n    // console.log(\"[ItemStats] properties : \",properties);\n    const _IMAGE_ = 'image';\n    const _VIDEO_ = 'video';\n    const _PDF_ = 'pdf';\n    const locale='fr-FR';\n\n    const {\n        format,\n        format_type,\n        size_in_kbytes,\n        image_properties,\n        video_properties\n    } = properties;\n    // console.log(\"properties : \",properties);\n    // console.log(\"image_properties : \",image_properties);\n\n    const isImage = format_type === _IMAGE_;\n    const isVideo = format_type === _VIDEO_;\n    const isDocument = !isImage && !isVideo;\n    const isPdf = format_type === _PDF_;\n\n    const formatFileSize = () => {\n        switch(true){\n            case size_in_kbytes > 1000000:\n                return `${(size_in_kbytes/1000000).toLocaleString(locale,{maximumFractionDigits:1})} GB`;\n            case size_in_kbytes > 1000:\n                return `${(size_in_kbytes/1000).toLocaleString(locale,{maximumFractionDigits:1})} MB`;\n            default :\n                return `${size_in_kbytes.toLocaleString(locale,{maximumFractionDigits:1})} KB`;\n        }\n    }\n\n    const getFileFormatIcon = () => {\n        const size = '1x';\n        switch(true){\n            case isImage :\n                return <FontAwesomeIcon icon={['fas','image']} size={size}/>//<FontAwesomeIcon icon={['far','file-image']} size={size}/>\n            case isVideo :\n                return <FontAwesomeIcon icon={['fas','video']} size={size}/>//<FontAwesomeIcon icon={['far','file-video']} size={size}/>\n            case isPdf:\n                return <FontAwesomeIcon icon={['far','file-pdf']} size={size}/>\n            default :\n                return <FontAwesomeIcon icon={['far','file']} size={size}/>\n        }\n    }\n\n    return(\n        <>\n            <ul className=\"stats\">\n                <li className=\"type\" title={format_type}>\n                    <strong>Type</strong>\n                    {getFileFormatIcon()}\n                </li>\n                <li title={format.toLowerCase()}>\n                    <strong>Format</strong>\n                    {format.toLowerCase()}\n                </li>\n                <li title={formatFileSize()}>\n                    <strong>Size</strong>\n                    {formatFileSize()}\n                </li>\n            </ul>\n            {isImage &&\n                <ImageStats properties={image_properties} locale={locale}/>\n            }\n            {isVideo &&\n                <VideoStats properties={video_properties} locale={locale}/>\n            }\n            {isDocument &&\n                <ul className=\"stats\">\n                    <li className=\"w-100\">\n                        {/*<strong></strong> <FontAwesomeIcon icon={['fas','kiwi-bird']} size=\"2x\"/>*/}\n                    </li>\n                </ul>\n            }\n        </>\n    );\n}\n\n\n\nconst Item=({item})=>{\n// console.log(\"[Item] item : \",item);\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {selectedItem} = state //TODO locale is needed for the date format\n    const {thumbnails,created_date,last_update_date,filename,id,file_properties} = item;\n    const thumbnailURL = get(thumbnails,\"300px.url\",null);\n    // const url = get(embeds,\"templated.url\",null);\n\n    //const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    const options = { year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'};\n\n    let createdDate = new Date(created_date);\n    createdDate = createdDate.toLocaleDateString('fr-FR', options);\n\n    let updatedDate = new Date(last_update_date);\n    updatedDate = updatedDate.toLocaleDateString('fr-FR', options);\n\n    const active = selectedItem.id===id?\"active\":\"\";\n    const handleClick = () =>\n        dispatch({\n            case:\"UPDATE_SELECTED_ITEM\",\n            payload:{\n                id\n            }\n        });\n\n\n    // <Card className={active} onClick={handleClick}>\n    //     {thumbnailURL &&\n    //     <Card.Img variant=\"top\" src={thumbnailURL}/>\n    //     }\n    //     <Card.Body>\n    //         <Card.Title>{filename}</Card.Title>\n    //         {/*<Card.Text>*/}\n    //         {/*    {meta.description}*/}\n    //         {/*</Card.Text>*/}\n    //     </Card.Body>\n    //     <Card.Footer className=\"text-center\">\n    //         {/*{discount &&*/}\n    //         {/*    <Decote*/}\n    //         {/*        discount={meta.decote}*/}\n    //         {/*        price={meta.prix_barre}/>*/}\n    //         {/*}*/}\n    //         {date}\n    //     </Card.Footer>\n    // </Card>\n\n    return(\n        // <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12\">\n            <div className={`card tile ${active}`} onClick={handleClick}>\n                <div className=\"wrapper\">\n\n                    <div className=\"banner-img\">\n                        <img src={thumbnailURL} alt=\"Image 1\"/>\n                    </div>\n\n                    <div className=\"header\">{filename}</div>\n\n                    <div className=\"dates\">\n                        <div className=\"start\">\n                            <strong>Created</strong> {createdDate}\n                        </div>\n                        <div className=\"ends\">\n                            <strong>Updated</strong> {updatedDate}\n                        </div>\n                    </div>\n\n                    <ItemStats properties={file_properties}/>\n\n                    {/*<div className=\"footer\">*/}\n                    {/*    <a href=\"#\" className=\"Cbtn Cbtn-primary\">View</a>*/}\n                    {/*    <a href=\"#\" className=\"Cbtn Cbtn-danger\">Delete</a>*/}\n                    {/*</div>*/}\n                </div>\n            </div>\n        // </div>\n\n    )\n}\n\nItem.propTypes={\n    item:PropTypes.object.isRequired,\n}\n\nexport default Item;","import get from \"lodash.get\";\n\n// const computeSearchContext = ({searchContexts}) =>\n//     Object.keys(searchContexts).reduce((params, key) => {\n//         let value = searchContexts[key];\n//         if(key===\"segments\")\n//             value = value.replace(\" | \",\"|\");\n//\n//         if (value)\n//             params[`contexts[${key}]`] = value;//contexts[buyerProfile]=promotion\n//         return params;\n//     }, {});\n\nconst computeFacetContext = ({searchFacets}) =>\n    searchFacets.reduce((params,facet) => {\n        // console.log(\"[computeFilterContext] facet : \",facet);\n        const filters = facet.list.reduce((params,filter)=>{\n            // console.log(\"filter.id : \",filter.id)\n            // console.log(\"filter.selected : \",filter.selected)\n            if(filter.selected){\n\n                params[`filters[${filter.type}][values][]`] = filter.filter;\n                params[`filters[${filter.type}][operations][]`]=\"and\"\n            }\n            return params;\n        },{});\n        // console.log(\"[computeFilterContext] filters : \",filters);\n        return{\n            ...params,\n            ...filters\n        }\n    },{});\n\nconst computeFilterContext = ({searchFilters}) =>\n    searchFilters.reduce((params,filter) => {\n        // console.log(\"[computeFilterContext] facet : \",filter);\n        params[`filters[${filter.id}][values][]`] = filter.value;\n        params[`filters[${filter.id}][operations][]`]= filter.operation;\n\n        // console.log(\"[computeFilterContext] filters : \",filters);\n        return params;\n    },{});\n\n\nconst paging = ({searchResultPerPage,searchResultPageIndex}) => {\n    // console.log(\"[paging] searchResultPerPage: \",searchResultPerPage,\"; searchResultPageIndex : \",searchResultPageIndex)\n    return{\n        offset:(searchResultPageIndex-1)*searchResultPerPage,\n        limit:searchResultPerPage\n    };\n}\n\nconst sort = ({searchSortBy,searchSortByDirection,searchSortListDirection}) => {\n    const [sortDirectionItem] = searchSortListDirection.filter(item => item.value === searchSortByDirection);\n    return{\n        sort:`${sortDirectionItem.symbol}${searchSortBy}`\n    };\n\n}\n\nconst fetchSearchData = async ({path = \"/\",state,dispatch}) => {\n    const {\n        widenEngine,\n        searchQuery,\n        //searchContexts,\n        searchFacets,\n        searchFilters,\n        searchResultPerPage,\n        searchResultPageIndex,\n        searchSortBy,\n        searchSortByDirection,\n        searchSortListDirection\n    } = state;\n\n    dispatch({\n        case: \"LOADING\",\n        payload: {\n            value:true\n        }\n    });\n    // console.log(\"searchQuery : \",searchQuery);\n    const params = {\n        query:searchQuery,\n        expand:\"embeds,thumbnails,file_properties\",\n        // ...computeSearchContext({searchContexts}),\n        // ...computeFacetContext({searchFacets}),\n        // ...computeFilterContext({searchFilters}),\n        ...paging({searchResultPerPage,searchResultPageIndex}),\n        ...sort({searchSortBy,searchSortByDirection,searchSortListDirection})\n    }\n\n    // console.log(\"[fetchSearchData] params : \",params);\n\n    try {\n        //TODO test response.status===200 || 204? sinon throw Error(response.status)\n        const response = await widenEngine(path, {params})\n        dispatch({\n            case: \"UPDATE_SEARCH_RESULTS\",\n            payload: {\n                searchResults: get(response,\"data\",{})\n            }\n        });\n    }catch (error) {\n        dispatch({\n            case: \"ERROR\",\n            payload: {\n                error\n            }\n        });\n    }\n    dispatch({\n        case: \"LOADING\",\n        payload: {\n            value:false\n        }\n    });\n};\n\nexport {\n    fetchSearchData\n}","import React from 'react';\nimport {StoreContext} from \"contexts\";\n\nconst PageLink=({index}) =>{\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        searchResultPageIndex\n    } = state\n\n    const className = searchResultPageIndex===index ? \"active\" : \"\";\n\n    const handleGoToPage = (e) =>{\n        e.preventDefault();\n        dispatch({\n            case: \"GOTO_RESULT_PAGE\",\n            payload:{\n                index\n            }\n        });\n    }\n\n    return(\n        <li>\n            <a href=\"#\" className={className} onClick={handleGoToPage}>{index}</a>\n        </li>\n    )\n}\n\nexport default PageLink;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport PageLink from \"./PageLink\";\n\nconst Nav=()=>{\n    const { state } = React.useContext(StoreContext);\n    const {\n        searchResultMaxPage\n    } = state\n\n    return (\n        <>\n            {[...Array(searchResultMaxPage)].map((e,i)=>\n                <PageLink key={i} index={i+1}/>\n            )}\n        </>\n\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport PageLink from \"./PageLink\";\n\nconst NavXL=()=>{\n    const { state } = React.useContext(StoreContext);\n    const {\n        searchResultPageIndex,\n        searchResultMaxPage\n    } = state\n\n    const dotBefore = searchResultPageIndex > 3 ? true : false;\n    const dotAfter = searchResultMaxPage - searchResultPageIndex >2 ? true : false;\n\n\n    let paging;\n    switch(true){\n        case searchResultPageIndex <=2 :\n            paging = [2,3];\n            break;\n        case searchResultMaxPage - searchResultPageIndex >1:\n            paging = [searchResultPageIndex-1,searchResultPageIndex,searchResultPageIndex+1];\n            break;\n        case searchResultMaxPage - searchResultPageIndex === 1:\n            paging = [searchResultPageIndex-1,searchResultPageIndex];\n            break;\n        default:\n            paging = [searchResultPageIndex-2,searchResultPageIndex-1];\n            break;\n    }\n\n    return (\n        <>\n            <PageLink index={1}/>\n            {dotBefore &&\n                <li className=\"interlayer\" >\n                    <FontAwesomeIcon icon={['fas','ellipsis-h']}/>\n                </li>\n            }\n            {paging.map((e,i)=>\n                <PageLink key={i} index={e}/>\n            )}\n            {dotAfter &&\n                <li className=\"interlayer\">\n                    <FontAwesomeIcon icon={['fas','ellipsis-h']}/>\n                </li>\n            }\n            <PageLink index={searchResultMaxPage}/>\n        </>\n\n    )\n}\n\nexport default NavXL;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst ResultPerPage=() =>{\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {\n        searchResultPerPage\n    } = state\n\n    const handleChange = (e) => {\n        dispatch({\n            case: \"UPDATE_RESULT_PER_PAGE\",\n            payload:{\n                value:e.target.value\n            }\n        });\n    }\n\n    return(\n        <li>\n            <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">\n                        {/*<FontAwesomeIcon icon={['fas','file']}/>*/}\n                        <FontAwesomeIcon icon={['far','file-alt']}/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                    as=\"select\"\n                    defaultValue={searchResultPerPage}\n                    onChange={handleChange}\n                    title=\"Result per page\"\n                >\n                    {[5,10,20,50,100].map( nb => <option key={nb} value={nb}>{nb}</option>)}\n                </Form.Control>\n                {/*<InputGroup.Append>*/}\n                {/*    <InputGroup.Text id=\"inputGroupPrepend\">*/}\n                {/*        /!*<FontAwesomeIcon icon={['fas','file']}/>*!/*/}\n                {/*        <FontAwesomeIcon icon={['far','file-alt']}/>*/}\n                {/*    </InputGroup.Text>*/}\n                {/*</InputGroup.Append>*/}\n            </InputGroup>\n        </li>\n    )\n}\n\nexport default ResultPerPage;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst PageFormLink=() =>{\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {\n        isLoading,\n        searchResultPageIndex,\n        searchResultMaxPage\n    } = state\n\n    const[index,setIndex] = React.useState(searchResultPageIndex);\n\n    React.useEffect( () =>{\n        setIndex(searchResultPageIndex);\n    },[searchResultPageIndex])\n\n    const handleChange = (e) => {\n        setIndex(e.target.value);\n    }\n\n    const handleGoToPage = (e) =>{\n        e.preventDefault();\n\n        if(searchResultMaxPage<index)\n            return;\n\n        dispatch({\n            case: \"GOTO_RESULT_PAGE\",\n            payload:{\n                index\n            }\n        });\n    }\n\n\n    return(\n        <li>\n            <Form className=\"pT4__form-goto\" onSubmit={handleGoToPage}>\n                <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroupPrepend\">\n                            {/*<FontAwesomeIcon icon={['fas','file']}/>*/}\n                            <FontAwesomeIcon icon={['far','paper-plane']}/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"paging\"\n                        value={index}\n                        onChange={handleChange}\n                        title=\"Goto Page\"\n                    />\n                    <InputGroup.Append>\n                        <Button type=\"submit\" variant=\"outline-secondary\" disabled={isLoading}>\n                            <FontAwesomeIcon icon={['fas','sync-alt']}/>\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n            </Form>\n        </li>\n    )\n}\n\nexport default PageFormLink;","\nconst _WEAKREFERENCE_ = \"WEAKREFERENCE\";\n//TODO voir si avec SDL je peux passe l'URL des images!\nfunction getProperties(properties,context){\n    if(!properties) return;\n    return properties.reduce(function(bundle,property){\n        const key = property.name.split(\":\").pop();\n        let value = property.value || property.values;\n// console.log(\"property : \",property);\n        if(property.type === _WEAKREFERENCE_ &&\n            property.weakreference &&\n            property.weakreference.path\n        ){\n            property.weakreference.url=\n                `${context.files_endpoint}${encodeURI(property.weakreference.path)}`;\n            value = property.weakreference;\n        }\n\n        bundle[key]=value;\n        return bundle;\n    },{});\n};\n\n// function getWeakURL(filesEndpoint,nodePath){\n//     return `${filesEndpoint}${encodeURI(nodePath)}`;///encodeURIComponent()\n// };\n\nfunction getRandomString (length, format){\n    let mask = \"\";\n    if (format.indexOf(\"a\") > -1) mask += \"abcdefghijklmnopqrstuvwxyz\";\n    if (format.indexOf(\"A\") > -1) mask += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (format.indexOf(\"#\") > -1) mask += \"0123456789\";\n    if (format.indexOf(\"!\") > -1) mask += \"~`!@#$%^&*()_+-={}[]:\\\";'<>?,./|\\\\\";\n    let result = \"\";\n    for (let i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n};\n\nfunction getGQLWorkspace(workspace){\n    return workspace===\"default\"?\n        \"EDIT\":\n        workspace.toUpperCase()\n}\n\nexport {\n    getProperties,\n    getRandomString,\n    getGQLWorkspace\n}","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {Dropdown,DropdownButton,Button} from 'react-bootstrap';\nimport {getRandomString} from \"misc/utils\";\nimport PageLink from \"./PageLink\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst Nav=()=>{\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        searchSortBy,\n        searchSortByDirection,\n        searchSortList,\n        searchSortListDirection,\n    } = state\n    const [sortByItem] = searchSortList.filter(item => item.value===searchSortBy);\n    const [sortDirectionItem] = searchSortListDirection.filter(item => item.value === searchSortByDirection);\n\n    const handleClickSortBy = (e) =>{\n        const sortBy = e.target.id;\n        dispatch({\n            case:\"UPDATE_SORT_ITEM\",\n            payload:{\n                sortBy\n            }\n        });\n    };\n\n    const handleClickSortByDirection = (e) =>\n        dispatch({\n            case:\"TOGGLE_SORT_DIRECTION\"\n        });\n\n//TODO lister les options avec value et key\n    //faire un dropdown button pour chaque option\n    //faire le dispatch qui va bien -> update propertie and\n    //     <i className=\"fas fa-sort-amount-up\"></i>\n    return (\n        <>\n            <li>\n                <DropdownButton\n                    alignRight\n                    variant=\"outline-dark\"\n                    title={`Sort by ${sortByItem.label}`}\n                    id={`sortBy_${getRandomString(6,\"aA#\")}`}\n                >\n                    {searchSortList.map((item,i)=>\n                        <Dropdown.Item key={i} id={item.value} onClick={handleClickSortBy}>{item.label}</Dropdown.Item>\n                    )}\n                    {/*<Dropdown.Divider />*/}\n                </DropdownButton>\n            </li>\n            <li>\n                <Button\n                    variant=\"outline-dark\"\n                    onClick={handleClickSortByDirection}\n                >\n                    <FontAwesomeIcon icon={['fas',sortDirectionItem.label]}/>\n                </Button>\n            </li>\n        </>\n    )\n}\n\nexport default Nav;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport {StoreContext} from \"contexts\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Nav from \"./component/Nav\";\nimport NavXL from \"./component/NavXL\";\nimport ResultPerPage from \"components/Paging/component/ResultPerPage\";\nimport PageFormLink from \"components/Paging/component/PageFormLink\";\nimport Sort from \"components/Paging/component/Sort\";\n\nconst Paging=(props)=>{\n\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {\n        searchResultPerPage,\n        searchResultMaxPage,\n        searchResultAvailableAnswersCount\n    } = state\n\n    //TODO think about this\n    const showForm = searchResultMaxPage > 10;\n\n    if(!searchResultMaxPage)\n        return(<></>);\n\n    const handlePrev = (e) =>{\n        e.preventDefault();\n        dispatch({\n            case: \"PREVIOUS_RESULT_PAGE\"\n        });\n    }\n\n\n    const handleNext = (e) =>{\n        e.preventDefault();\n        dispatch({\n            case: \"NEXT_RESULT_PAGE\"\n        });\n    }\n\n    return(\n        <>\n            <ul className=\"pT4__paging results\">\n                <li className=\"results\">\n                    {/*<FontAwesomeIcon icon={['fas','hashtag']}/>*/}\n                    <h6>Résultats : {searchResultAvailableAnswersCount}</h6>\n                </li>\n                <Sort/>\n                <ResultPerPage/>\n\n                {showForm &&\n                <PageFormLink/>\n                }\n            </ul>\n            <ul className=\"pT4__paging\">\n                <li className=\"nav\">\n                    <a href=\"#\" onClick={handlePrev}>\n                        <FontAwesomeIcon icon={['fas','chevron-left']} />\n                    </a>\n                </li>\n\n                {searchResultMaxPage <=5 &&\n                <Nav/>\n                }\n\n                {searchResultMaxPage > 5 &&\n                <NavXL/>\n                }\n\n                <li className=\"nav\">\n                    <a href=\"#\" onClick={handleNext}>\n                        <FontAwesomeIcon icon={['fas','chevron-right']} />\n                    </a>\n                </li>\n            </ul>\n        </>\n\n    )\n}\n\nPaging.propTypes={}\n\nexport default Paging;","import React from 'react';\n// import logo from '../assets/logo.svg';\nimport spinner from \"assets/loader_4.gif\";\nimport 'components/App.scss';\n\nimport get from \"lodash.get\";\nimport {InputGroup, FormControl, Button, Row, Container,Col} from \"react-bootstrap\";\n\nimport {StoreContext} from \"contexts\";\nimport SearchForm from \"components/SearchForm\";\nimport Item from \"components/Item\";\nimport Facet from \"components/Facet\";\nimport {fetchSearchData} from \"misc/data\";\nimport CurrentFilter from \"components/CurrentFilter\";\nimport Paging from \"components/Paging\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n    faVideo,\n    faImage,\n    faSortAmountDown,\n    faSortAmountUp,\n    faSyncAlt,\n    faSearch,\n    faKiwiBird,\n    faPowerOff,faBan,faTimes,faUserCheck,faUserTag,faCrosshairs,faChevronLeft,faChevronRight,faHashtag,faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { faPaperPlane,faFileAlt,faCheckCircle,faThumbsUp,faUserCircle,faAddressCard,faFilePdf,faFileImage,faFileVideo,faFile} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n    faKiwiBird,\n    faVideo,\n    faImage,\n    fab,\n    faSearch,\n    faPowerOff,\n    faCheckCircle,\n    faThumbsUp,\n    faBan,\n    faTimes,\n    faUserCheck,\n    faUserTag,\n    faUserCircle,\n    faAddressCard,\n    faCrosshairs,\n    faChevronLeft,\n    faChevronRight,\n    faHashtag,\n    faEllipsisH,\n    faFile,\n    faFileAlt,\n    faSyncAlt,\n    faPaperPlane,\n    faSortAmountDown,\n    faSortAmountUp,\n    faFilePdf,\n    faFileImage,\n    faFileVideo,\n    faFile\n);\n\nconst errorMsg = 'Oups something get wrong';\nconst Error= ({e}) => {\n    return(\n        <>\n            <h1>{errorMsg}</h1>\n            <p>{e.message}</p>\n        </>\n    );\n}\n\nconst App = (props) => {\n    const {state, dispatch} = React.useContext(StoreContext);\n    const {\n        context,\n        error,\n        isLoading,\n        searchAnswers,\n        searchIframe,\n        searchFacets,\n        needToFetch\n    } = state;\n\n    React.useEffect(() => {\n\n        // console.log(\"[APP] needToFetch : \",needToFetch);\n\n        const _fetchData = async () =>\n            await fetchSearchData({\n                path: \"/assets/search\",\n                state,\n                dispatch\n            });\n\n        if (needToFetch)\n            _fetchData();\n\n    }, [needToFetch])\n\n    if (error) return <Error e={error}/>;\n\n    return (\n        <Container className=\"pT4\">\n            <Row>\n                <Col>\n                    <SearchForm/>\n                    {/*<CurrentFilter/>*/}\n                    <Paging/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    {isLoading &&\n                    <img className=\"pT4__spinner\" src={spinner}/>\n                    }\n                    {!isLoading &&\n                    <div className={`pT4__result ${isLoading ? \"\" : \"fade-in\"}`}>\n                        {\n                            searchAnswers.map(item =>\n                                <Item\n                                    key={item.id}\n                                    item={item}\n                                    locale={state.locale}\n                                />\n                            )\n                        }\n                    </div>\n                        // searchIframe &&\n                        // <iframe frameBorder=\"0\" src={searchIframe} width=\"100%\" height=\"700px\"></iframe>\n                    }\n                </Col>\n                {/*<Col xs=\"4\" sm=\"3\" md=\"4\" lg=\"3\">*/}\n                    {/*<ul className=\"pT4__facet\">*/}\n                    {/*    {searchFacets.map( facet =>*/}\n                    {/*        <Facet*/}\n                    {/*            key={facet.id}*/}\n                    {/*            facet={facet}*/}\n                    {/*        />*/}\n                    {/*    )*/}\n                    {/*    }*/}\n                    {/*</ul>*/}\n                {/*</Col>*/}\n            </Row>\n        </Container>\n    );\n\n    //\n    //   const [query, setQuery] = React.useState();\n    //   const [categories, setCategories] = React.useState([]);\n    // const [iframe, setIframe] = React.useState();\n    //   const [search, setSearch] = React.useState({\n    //       url:\"/integrations/url\",\n    //       params: {\n    //           hideSearchBar: true,\n    //           query: query\n    //       }\n    //   });\n    //   // const [isLoading, setIsLoading] = React.useState(false);\n    //   const [isError, setIsError] = React.useState(false);\n    //\n    // React.useEffect(() => {\n    //   const fetchData = async () => {\n    //       const categories = await widen.get(\"/categories\");\n    //       console.log(\"categories : \",categories)\n    //       setCategories(get(categories,\"data.items\",[]));\n    //   };\n    //\n    //   fetchData();\n    //\n    // },[]);\n    //\n    //   React.useEffect(() => {\n    //       if(search.params.query){\n    //           const fetchData = async () => {\n    //               setIframe(false);\n    //               setIsError(false);\n    //               setIsLoading(true);\n    //               try {\n    //                   const instantSearch = await widen.get(search.url,{params:search.params});\n    //                   console.log(\"instantSearch : \", instantSearch.data);\n    //                   //const frameURL = URL.createObjectURL(instantSearch.data);\n    //                   setIframe(instantSearch.data.url);\n    //               } catch (error) {\n    //                   setIsError(true);\n    //               }\n    //               setIsLoading(false);\n    //           };\n    //           fetchData();\n    //       }\n    //   },[search])\n    //\n    //\n    //   window.addEventListener('message', event =>{\n    //       //TODO verifier si j'ai un event.data.items[0].embed_code sinon laisser passer\n    //       // console.log(\"message : \",event.data);\n    //       // const embedCode = event.data.items[0].embed_code;\n    //       // console.log(embedCode);\n    //\n    //       // Insert embedCode into user’s html content\n    //       // Close iframe\n    //   })\n    //\n    // const handleChange = (e) =>{\n    //     const value= e.target.value;\n    //     console.log(\"value : \",value);\n    //     setQuery(value);\n    // }\n    // const handleSearch = () =>{\n    //     console.log(\"handleSearch query : \",query);\n    //       const params = {...search.params,query}\n    //     setSearch({...search,params});\n    // }\n    //\n    // const handleCategory = (e,category) => {\n    //     console.log(\"handleCategory category : \",category);\n    //     e.preventDefault();\n    //     // const _query = `${query}&assetcategory:${category.id}`;//encodeURI();\n    //     // const params = {...search.params,query:_query}\n    //     const params = {...search.params,assetcategory:category.id};\n    //     setSearch({...search,params});\n    // }\n    //\n    // return (\n    //     <Container fluid>\n    //         <Row>\n    //             <Col>\n    //                 <ul>\n    //                 {categories.map(category =>\n    //                     <li key={category.id}>\n    //                         <a href=\"#\" onClick={ e => handleCategory(e,category)}>\n    //                             {category.name}\n    //                         </a>\n    //                     </li>\n    //                   )}\n    //                 </ul>\n    //             </Col>\n    //             <Col xs={10}>\n    //                 {isError && <div>Something went wrong ...</div>}\n    //\n    //                 <InputGroup className=\"mb-3\">\n    //                     <FormControl\n    //                         placeholder=\"Search text\"\n    //                         onChange={handleChange}\n    //                     />\n    //                     <InputGroup.Append>\n    //                         <Button\n    //                             variant=\"outline-secondary\"\n    //                             onClick={handleSearch}>\n    //                             Search\n    //                         </Button>\n    //                     </InputGroup.Append>\n    //                 </InputGroup>\n    //                 {isLoading &&\n    //                   <img src={spinner}/>\n    //                 }\n    //                 {/*<img src={spinner}/>*/}\n    //                 {iframe &&\n    //                     <iframe frameBorder=\"0\" src={iframe} width=\"100%\" height=\"700px\"></iframe>\n    //                 }\n    //             </Col>\n    //         </Row>\n    //     </Container>\n    //\n    //\n    // );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Ajv = ({item,errors})=> {\n    return(\n        <div>\n            <h1>Validation errors</h1>\n            <p>An error occurred when validating <b>{item}</b></p>\n            <ul>\n                {errors.map( (error,i) =>\n                    <li>\n                        {error.dataPath} : {error.message}\n                    </li>)\n                }\n            </ul>\n        </div>\n    )\n}\n\nAjv.propTypes={\n    item:PropTypes.string.isRequired,\n    errors:PropTypes.array.isRequired\n};\n\nexport default Ajv;","// import jCustomer from \"./definitions/jCustomer\";\n// import jContent from \"./definitions/jContent\";\n// import gql from \"./definitions/gql\";\nimport {workspace} from \"douane/lib/config\";\n\nexport default{\n    context:{\n        title:\"context validation schema \",\n        description:\"context is an object provided by the page in charge to load the app\",\n        // definitions: {\n        //     jContent:jContent,\n        //     jCustomer:jCustomer,\n        //     gql:gql\n        // },\n        type:\"object\",\n        // properties:{\n        //     jContent:{$ref:\"#jContent\"},\n        //     gql:{$ref:\"#gql\"},\n        //     jCustomer:{$ref:\"#jCustomer\"}\n        // },\n        properties:{\n            //\"fr\" or \"fr-FR\" TODO voir si je suis permissif et accpete 'fr'\n            host:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n            },\n            workspace:{\n                type:\"string\",\n                enum:workspace,\n                default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n            },\n            scope:{\n                type:\"string\",\n                pattern:\"[a-zA-Z0-9-_]+\",//iso\n                default:process.env.REACT_APP_JCONTENT_SCOPE\n            },\n            widen:{\n                type:\"object\",\n                properties:{\n                    url:{\n                        type:\"string\",\n                        format:\"uri\",\n                        default:process.env.REACT_APP_WIDEN_ENDPOINT //could be null in case of edit!\n                    },\n                    site:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_SITE\n                    },\n                    token:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_TOKEN\n                    },\n                    version:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_VERSION\n                    },\n                    lazyLoad:{\n                        type:\"boolean\",\n                        default:JSON.parse(process.env.REACT_APP_WIDEN_LAZY_LOAD)\n                    },\n                    resultPerPage:{\n                        type:\"integer\",\n                        default:Number.parseInt(process.env.REACT_APP_WIDEN_RESULT_PER_PAGE, 10)\n                    },\n                    mountPoint:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_MOUNT_POINT\n                    }\n\n                    // locale:{\n                    //     type:\"object\",\n                    //     properties:{\n                    //         user:{\n                    //             type:\"string\",\n                    //             pattern:\"^[a-z]{2}$\",//\"[a-z]{2}(?:-[A-Z]{2})?\"\n                    //             default:process.env.REACT_APP_WIDEN_USER_LOCALE\n                    //         },\n                    //         search:{\n                    //             type:\"string\",\n                    //             pattern:\"^[a-z]{2}-[A-Z]{2}$\",\n                    //             default:process.env.REACT_APP_WIDEN_SEARCH_LOCALE\n                    //         }\n                    //     },\n                    //     required: [\"user\", \"search\"],\n                    //     additionalProperties:false\n                    //\n                    // },\n                },\n                required: [\"url\", \"site\",\"token\",\"version\",\"lazyLoad\",\"resultPerPage\",\"mountPoint\"],//,\"locale\"\n                additionalProperties:false\n            },\n            // cdp_endpoint:{\n            //     type:\"string\",\n            //     format:\"uri\",\n            //     default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n            // },\n            // cdp_token:{\n            //     type:\"string\",\n            //     default:process.env.REACT_APP_JCUSTOMER_TOKEN\n            // },\n            // gql_endpoint:{\n            //     type:\"string\",\n            //     format:\"uri\",\n            //     default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n            // },\n            // gql_authorization:{\n            //     type:\"string\",\n            //     default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n            // },\n            // gql_variables:{\n            //     type:\"object\",\n            //     properties:{\n            //         language:{\n            //             type:\"string\",\n            //             pattern:\"[a-z]{2}(?:_[A-Z]{2})?\",//\"fr\" or \"fr_FR\"\n            //             default:process.env.REACT_APP_WIDEN_USER_LOCALE\n            //         }\n            //\n            //     },\n            //     required: [\"language\"],\n            //     additionalProperties:false\n            // },\n            // files_endpoint:{\n            //     type:\"string\",\n            //     format:\"uri\",\n            //     default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n            // }\n        },\n        required: [\n            \"host\",\n            \"workspace\",\n            \"scope\",\n            \"widen\",\n            // \"cdp_endpoint\",\n            // \"cdp_token\",\n            // \"gql_endpoint\",\n            // \"gql_authorization\",\n            // \"gql_variables\",\n            // \"files_endpoint\"\n        ],\n        additionalProperties:false\n    }\n}","// const validMark=\"[*]\";\n// const score_splitPattern=\"::\";\n\nconst workspace = [\"default\",\"live\"];\n// const cnd_type = {\n//     QNA:\"game4nt:qna\",\n//     WARMUP:\"game4nt:warmup\"\n// }\n// const consent_status={\n//     GRANTED:\"GRANTED\",\n//     DENIED:\"DENIED\",\n//     REVOKED:\"REVOKED\"\n// };\n\nexport {\n    workspace,\n    // cnd_type,\n    // validMark,\n    // consent_status,\n    // score_splitPattern\n}","import * as Ajv from \"ajv\";\nimport schema from \"douane/lib/schema\";\n// import {getGQLWorkspace} from \"misc/utils\";\n\nconst ajv = new Ajv({useDefaults:true});\n//TODO le try catch doit etre fait ici et un component react doit etre retourne\nconst contextValidator = (context) =>{\n\n    const valid = ajv.validate(schema.context, context);\n    if (!valid)\n        // throw new Error(`An error occurred during the validation of context object, errors : ${JSON.stringify(ajv.errors)}`);\n        throw {item:\"Context configuration object\",errors:ajv.errors};\n    // context.gql_variables.workspace = getGQLWorkspace(context.workspace);\n    return context;\n}\n\nexport {\n    contextValidator\n}","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport axios from \"axios\";\n\nimport {getRandomString} from \"misc/utils\";\n// import {fetchSearchData} from \"misc/data\";\n\n// import {getRandomString} from \"misc/utils\";\n// import {syncQuizScore} from \"misc/tracker\";\n// import QuizMapper from \"components/Quiz/QuizModel\";\n\nconst init = context => {\n    const widenEngine = axios.create({\n        baseURL:`${context.widen.url}/${context.widen.version}`,\n        headers:{\n            \"Content-Type\":\"application/json\",\n            Accept:\"application/json\",\n            Authorization:`Bearer ${context.widen.site}/${context.widen.token}`\n        },\n        responseType:\"json\",\n        timeout:10000\n    });\n    // widenEngine.interceptors.request.use((config) => {\n    //     config.params = config.params || {};\n    //     config.params[\"token\"] = context.widen.token;\n    //     config.params[\"action\"] =\"widenSearch\";//wordWheel fuzzy\n    //     config.params[\"all_items\"] =\"true\";\n    //     config.params[\"user_locale\"] =context.widen.locale.user;\n    //     config.params[\"search_locale\"] =context.widen.locale.search;\n    //     return config;\n    // });\n\n    // const graphQLEngine = axios.create({\n    //     baseURL:context.gql_endpoint,\n    //     headers:{\n    //         // \"Content-Type\":\"application/json\",\n    //         // Accept:\"application/json\",\n    //         Authorization:context.gql_authorization\n    //     },\n    //     responseType:\"json\",\n    //     // withCredentials: true,//important to send the context-profile-id cookie\n    //     timeout:3000\n    // });\n    // //\n    // profileEngine.interceptors.request.use((config) => {\n    //     config.headers = config.headers || {};\n    //     config.headers[\"Content-Type\"] = \"application/json\";\n    //     config.headers[\"Accept\"] =\"application/json\";\n    //     return config;\n    // });\n\n    const {lazyLoad,resultPerPage,mountPoint} = context.widen;\n\n    return {\n        context,\n        //locale:context.widen.locale.search,\n        error:null,\n        isLoading:false,\n        needToFetch:!lazyLoad,//false,\n        //needToFetch:false,\n        // profileEngine,\n        // userProfile:{},\n        selectedItem:{},\n        widenEngine,\n        mountPoint,\n        // graphQLEngine,\n        searchAnswers:[],\n        searchIframe:null,//not needed if I use searchAnswers\n        //searchContexts:{},\n        searchSortBy:\"created_date\",//newest assets first //TODO voir si je passe ça configurable au niveau jahia\n        searchSortByDirection:\"DESC\",\n        searchSortList:[\n            {value:\"created_date\",label:\"Date Added\"},\n            {value:\"last_update_date\",label:\"Date Updated\"},\n            {value:\"filename\",label:\"Filename\"},\n            {value:\"file_format\",label:\"File Format\"},\n            {value:\"file_size\",label:\"File Size\"},\n\n        ],\n        searchSortListDirection:[\n            {value:\"ASC\",label:\"sort-amount-up\",symbol:\"\"},\n            {value:\"DESC\",label:\"sort-amount-down\",symbol:\"-\"}],\n        searchQuery:null,\n        searchFacets:[],\n        searchFilters:[],\n        searchBanners:[],\n        searchResultPerPage:Number.parseInt(resultPerPage,10),//be sure it is an integer base 10\n        searchResultMaxPage:null,\n        searchResultPageIndex:1,\n        searchResultAvailableAnswersCount:null\n    }\n}\n\nconst reducer = (state, action) => {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"UPDATE_TEXT_QUERY\": {\n            console.debug(\"[STORE] UPDATE_TEXT_QUERY - query: \",payload.searchQuery);\n            return {\n                ...state,\n                searchQuery:payload.searchQuery\n            }\n        }\n        case \"RESET_TEXT_QUERY\": {\n            console.debug(\"[STORE] RESET_TEXT_QUERY\");\n            return {\n                ...state,\n                searchQuery:\"\",\n                needToFetch:true\n            }\n        }\n        case \"EXECUTE_QUERY\": {\n            console.debug(\"[STORE] EXECUTE_QUERY\");\n            return {\n                ...state,\n                searchResultPageIndex:1,//new search reset paging\n                needToFetch:true\n            }\n        }\n        case \"UPDATE_SELECTED_ITEM\": {\n            const {id} = payload;\n            // const {graphQLEngine,mountPoint} = state\n            console.debug(\"[STORE] UPDATE_SELECTED_ITEM - payload: \",payload);\n\n            // const synchWidenPickerInterface = async () => {\n            //     //Call jahia to generate the UUID of the virtual node\n            //     const query = `query getWiden($workspace: Workspace!,$path: String!){\n            //                       response: jcr(workspace: $workspace) {\n            //                         node:nodeByPath(path:$path){\n            //                           uuid\n            //                         }\n            //                       }\n            //                     }`;\n            //     const variables = {\n            //         workspace:\"EDIT\",\n            //         path:`${state.mountPoint}/${id}`\n            //     }\n            //     const data = {\n            //         query,\n            //         variables\n            //     }\n            //     try {\n            //         const response = await graphQLEngine.post(\"\",data);\n            //         // console.log(\"response : \",response);\n            //         const uuid = response.data.data.response.node.uuid;\n            //         return uuid;\n            //         console.log(\"jContent uuid is generated : \",uuid);\n            //     } catch (error) {\n            //         console.error(\"oups ! something wrong with graphQL : \",error)\n            //     }\n            // }\n            //\n            // synchWidenPickerInterface().then( uuid => { });\n\n            console.log(\"[STORE] UPDATE_SELECTED_ITEM - window.widenPickerInterface: \",window.widenPickerInterface);\n            window.widenPickerInterface.removeAll();\n            window.widenPickerInterface.add(`${state.mountPoint}/${id}`);\n            console.log(\"[STORE] UPDATE_SELECTED_ITEM - window.widenPickerInterface.data: \",window.widenPickerInterface.data);\n\n            return {\n                ...state,\n                selectedItem:payload\n            };\n        }\n        case \"UPDATE_SEARCH_RESULTS\": {\n            console.debug(\"[STORE] UPDATE_SEARCH_RESULTS - searchResults: \",payload.searchResults);\n            //sort,start_answer\n            const {items,total_count} = payload.searchResults\n            const {searchResultPerPage,searchResultPageIndex} = state;\n            let {searchResultMaxPage} = state;\n            const searchResultAvailableAnswersCount = total_count;\n\n            //TODO si catalogue empty gerer le cas avec un boolean\n\n            //refine calatog based on existing filters !\n            // catalogs.map(facet => {\n            //     facet.list.map(filter => {\n            //         filter.id = getRandomString(8,\"#aA\");\n            //         return filter;\n            //     })\n            //     return facet;\n            // });\n\n            //new search\n            if(searchResultPageIndex === 1)\n                searchResultMaxPage =Math.ceil(searchResultAvailableAnswersCount/searchResultPerPage);\n\n            return {\n                ...state,\n                searchAnswers:items,\n                // searchFacets:catalogs,\n                // searchFilters:filters,\n                // searchBanners:banners || [],\n                searchResultAvailableAnswersCount,\n                searchResultMaxPage,\n                needToFetch:false\n            };\n        }\n        case \"TOGGLE_FILTER\": {\n            const {filter} = payload;//fitler is an element of  widen.catalogs.list\n            console.debug(\"[STORE] TOGGLE_ANSWER -> filter id :\",filter.id);\n\n            let [facet,index] = state.searchFacets.reduce((result,facet,index)=>{\n                if(facet.id === filter.type)\n                    result = [facet,index];\n                return result;\n            },[]);\n\n            const list = facet.list.map(_filter => {\n                if(_filter.id === filter.id)\n                    return {\n                        ..._filter,\n                        selected:!_filter.selected\n                    };\n                return _filter;\n            });\n\n            facet = {\n                ...facet,\n                list\n            }\n\n            const searchFacets = state.searchFacets.slice();\n            searchFacets.splice(index, 1,facet);\n\n            console.debug(\"[STORE] searchFacets :\",searchFacets);\n\n            return {\n                ...state,\n                searchFacets,\n                searchResultPageIndex:1,//new search reset paging\n                needToFetch:true\n            };\n        }\n        case \"REMOVE_FILTER\": {\n            const {filter} = payload;//fitler is an element of  widen.filters\n            console.debug(\"[STORE] REMOVE_FILTER -> filter id :\",filter.id);\n\n            const searchFacets = state.searchFacets.filter( facet => facet.id !== filter.id);\n            // searchFacets.splice(index, 1,facet);\n\n            console.debug(\"[STORE] searchFacets :\",searchFacets);\n            //#2 remove for existing filters\n            const searchFilters = state.searchFilters.filter(_filter => _filter.id !== filter.id);\n\n            return {\n                ...state,\n                searchFacets,\n                searchFilters,\n                searchResultPageIndex:1,//new search reset paging\n                needToFetch:true\n            };\n        }\n        case \"ERROR\": {\n            console.debug(\"[STORE] ERROR - searchResults: \",payload.error);\n            return {\n                ...state,\n                error:payload.error\n            };\n        }\n        case \"LOADING\": {\n            console.debug(\"[STORE] LOADING - value: \",payload.value);\n            return {\n                ...state,\n                isLoading:payload.value\n            };\n        }\n        case \"PREVIOUS_RESULT_PAGE\": {\n            console.debug(\"[STORE] PREVIOUS_RESULT_PAGE\");\n\n            if(state.searchResultPageIndex <= 1)\n                return {\n                ...state\n            }\n\n            const searchResultPageIndex = state.searchResultPageIndex -1;\n\n            return {\n                ...state,\n                needToFetch:true,\n                searchResultPageIndex\n            };\n        }\n        case \"NEXT_RESULT_PAGE\": {\n            console.debug(\"[STORE] NEXT_RESULT_PAGE\");\n            const {searchResultMaxPage} = state;\n\n            if(state.searchResultPageIndex >= searchResultMaxPage)\n                return {\n                    ...state\n                }\n\n            const searchResultPageIndex = state.searchResultPageIndex +1;\n\n            return {\n                ...state,\n                needToFetch:true,\n                searchResultPageIndex\n            };\n        }\n        case \"GOTO_RESULT_PAGE\": {\n            console.debug(\"[STORE] GOTO_RESULT_PAGE payload : \",payload);\n            const index = Number(payload.index);\n            const {searchResultMaxPage} = state;\n\n            if(!index || index < 1 || index > searchResultMaxPage)\n                return {\n                    ...state\n                }\n\n            return {\n                ...state,\n                needToFetch:true,\n                searchResultPageIndex:index\n            };\n        }\n        case \"UPDATE_RESULT_PER_PAGE\": {\n            console.debug(\"[STORE] UPDATE_RESULT_PER_PAGE payload : \",payload);\n            const {value} = payload;\n\n            return {\n                ...state,\n                searchResultPerPage:value,\n                searchResultPageIndex:1,\n                needToFetch:true\n            };\n        }\n        case \"UPDATE_SORT_ITEM\": {\n            console.debug(\"[STORE] UPDATE_SORT_ITEM payload : \",payload);\n            const {sortBy} = payload;\n\n            return {\n                ...state,\n                searchSortBy:sortBy,\n                needToFetch:true\n            };\n        }\n        case \"TOGGLE_SORT_DIRECTION\": {\n            console.debug(\"[STORE] TOGGLE_SORT_DIRECTION\");\n            const {searchSortByDirection,searchSortListDirection} = state;\n            const [sortDirectionItem] = searchSortListDirection.filter(item => item.value != searchSortByDirection);\n\n            return {\n                ...state,\n                searchSortByDirection:sortDirectionItem.value,\n                needToFetch:true\n            };\n        }\n        default:\n            return {\n                ...state,\n                error:new Error(`[STORE] action case '${action.case}' is unknown `)\n            };\n            // throw new Error(`[STORE] action case '${action.case}' is unknown `);\n    };\n}\n\nexport const Store = props => {\n    const [state, dispatch] = React.useReducer(\n        reducer,\n        props.context,\n        init\n    );\n    return (\n        <StoreContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\nimport * as serviceWorker from 'misc/serviceWorker';\n\nimport AjvError from \"components/Error/Ajv\";\nimport {contextValidator} from \"douane\";\nimport {Store} from \"components/Store\";\n\nconst widenPickerInterface = {\n    _context: {},\n    _data: [],\n\n    get context() {\n        return this._context;\n    },\n    get data(){\n        return this._data;\n    },\n\n    set context(contextData) {\n        this._context = contextData;\n    },\n\n    set data(data){\n        this._data = data;\n    },\n\n    load: function (values) {\n        console.log(values.d);\n        if (values.d !== undefined && Array.isArray(values.d)) {\n            widenPickerInterface.data = Array.from(values.d);\n        }\n    },\n\n    add: function (path, product) {\n        this.data = [...this.data,path];\n        return this.data;\n    },\n\n    remove: function (path) {\n        this.data = this.data.filter( item => !item.endsWith(path) );\n    },\n\n    removeAt: function (index) {\n        if(index !== -1) {\n            this.data = this.data.splice(index, 1);\n            return this.data;\n        }\n        return null;\n    },\n\n    removeAll: function () {\n        widenPickerInterface.data = [];\n    },\n\n    // get: function () {\n    //     return productPickerData.data;\n    // }\n\n};\n\nconst render = (target,context) =>{\n    try{\n        // console.log(\"context : \",JSON.stringify(context));\n        context = contextValidator(context);\n        const headers={};\n        // if(context.gql_authorization)\n        //     headers.Authorization=context.gql_authorization;\n\n        // const client = new ApolloClient({\n        //     uri:context.gql_endpoint,\n        //     headers\n        // })\n\n        ReactDOM.render(\n            <Store context={context}>\n                <App />\n            </Store>,\n            document.getElementById(target)\n        );\n\n        // ReactDOM.render(\n        //     <React.StrictMode>\n        //         <Store context={context}>\n        //             {/*<ApolloProvider client={client}>*/}\n        //             <App />\n        //             {/*</ApolloProvider>*/}\n        //         </Store>\n        //     </React.StrictMode>,\n        //     document.getElementById(target)\n        // );\n\n    }catch(e){\n        console.error(\"error : \",e);\n        //TODO create a generic error handler\n        ReactDOM.render(\n            <AjvError\n                item={e.item}\n                errors={e.errors}\n            />,\n            document.getElementById(target)\n        );\n    }\n\n    // ReactDOM.render(\n    //     <React.StrictMode>\n    //         <App />\n    //     </React.StrictMode>,\n    //     document.getElementById(target)\n    // );\n}\n\nwindow.widenPicker = render;\nwindow.widenPickerInterface = widenPickerInterface;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}