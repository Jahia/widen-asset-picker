{"version":3,"sources":["assets/loader_4.gif","contexts/index.js","components/SearchForm/SearchForm.jsx","components/Item/Item.jsx","misc/data.js","components/Paging/component/PageLink.jsx","components/Paging/component/Nav.jsx","components/Paging/component/NavXL.jsx","components/Paging/component/ResultPerPage.jsx","components/Paging/component/PageFormLink.jsx","misc/utils.js","components/Paging/component/Sort.jsx","components/Paging/Paging.jsx","components/App.js","misc/serviceWorker.js","components/Error/Ajv.jsx","douane/lib/schema/index.js","douane/lib/config.js","douane/index.js","components/Store/Store.jsx","index.js"],"names":["StoreContext","React","createContext","SearchForm","props","useContext","state","dispatch","isLoading","handleSubmit","e","a","preventDefault","case","Form","className","onSubmit","Group","controlId","InputGroup","Control","type","name","onChange","searchQuery","target","value","payload","placeholder","Append","Button","variant","disabled","onClick","icon","Text","Item","item","selectedItem","thumbnails","created_date","filename","id","embeds","thumbnailURL","get","url","date","Date","toLocaleDateString","weekday","year","month","day","active","Card","Img","src","Body","Title","Footer","paging","searchResultPerPage","offset","searchResultPageIndex","limit","sort","searchSortBy","searchSortByDirection","searchSortListDirection","filter","sortDirectionItem","symbol","fetchSearchData","path","widenEngine","searchFacets","searchFilters","params","query","expand","response","searchResults","error","PageLink","index","href","Nav","searchResultMaxPage","Array","map","i","key","NavXL","dotBefore","dotAfter","ResultPerPage","Prepend","as","defaultValue","title","nb","PageFormLink","useState","setIndex","useEffect","getRandomString","length","format","mask","indexOf","result","Math","floor","random","searchSortList","sortByItem","handleClickSortBy","sortBy","DropdownButton","alignRight","label","Dropdown","Paging","searchResultAvailableAnswersCount","showForm","Sort","library","add","fab","faSearch","faPowerOff","faCheckCircle","faThumbsUp","faBan","faTimes","faUserCheck","faUserTag","faUserCircle","faAddressCard","faCrosshairs","faChevronLeft","faChevronRight","faHashtag","faEllipsisH","faFile","faFileAlt","faSyncAlt","faPaperPlane","faSortAmountDown","faSortAmountUp","Error","message","App","context","searchAnswers","needToFetch","searchIframe","_fetchData","Container","Row","Col","spinner","locale","xs","sm","md","lg","Boolean","window","location","hostname","match","Ajv","errors","dataPath","description","properties","host","default","process","workspace","enum","scope","pattern","widen","site","token","version","lazyLoad","JSON","parse","resultPerPage","Number","parseInt","mountPoint","required","additionalProperties","gql_endpoint","gql_authorization","ajv","useDefaults","init","axios","create","baseURL","headers","Accept","Authorization","responseType","timeout","graphQLEngine","searchBanners","reducer","action","console","debug","variables","data","post","uuid","node","synchWidenPickerInterface","then","log","widenPickerInterface","items","total_count","ceil","reduce","facet","list","_filter","selected","slice","splice","Store","useReducer","Provider","children","_context","_data","this","contextData","load","values","d","undefined","isArray","from","product","remove","endsWith","removeAt","removeAll","widenPicker","validate","schema","contextValidator","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e8b70aef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader_4.d2f7f41c.gif\";","import React from 'react';\n\nexport const StoreContext = React.createContext(null);\n","import React from 'react';\nimport {InputGroup,Form,Button} from 'react-bootstrap';\n//import PropTypes from 'prop-types';\n//import get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst SearchForm = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        isLoading\n    } = state\n\n    const handleChange = (e) => {\n        const searchQuery= e.target.value;\n        //needed if I want to enable Fuzzy search\n        dispatch({\n            case:\"UPDATE_TEXT_QUERY\",\n            payload:{\n                searchQuery\n            }\n        });\n    }\n\n    const handleReset =(e) => {\n        //e.preventDefault();\n        dispatch({\n            case:\"RESET_TEXT_QUERY\"\n        });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        dispatch({\n            case:\"EXECUTE_QUERY\"\n        });\n    }\n\n    return(\n        <Form className=\"pT4__form\" onSubmit={handleSubmit}>\n            <Form.Group controlId=\"basicSearch\">\n                {/*<Form.Label>Email address</Form.Label>*/}\n                <InputGroup className=\"mb-3\">\n                    <Form.Control\n                        type=\"text\"\n                        name=\"query\"\n                        // value={searchQuery}\n                        onChange={handleChange}\n                        placeholder=\"Que cherchez-vous ?\"\n                    />\n                    <InputGroup.Append>\n                        <Button type=\"reset\" variant=\"outline-secondary\" disabled={isLoading} onClick={handleReset}>\n                            <FontAwesomeIcon icon={['fas','times']}/>\n                        </Button>\n                    </InputGroup.Append>\n                    <InputGroup.Append>\n                        <Button type=\"submit\" variant=\"secondary\" disabled={isLoading}>\n                            <FontAwesomeIcon icon={['fas','search']}/>\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Text className=\"text-muted\">\n                    <FontAwesomeIcon icon={['fas','power-off']}/> by\n                    Jahia For Widen\n                </Form.Text>\n            </Form.Group>\n        </Form>\n    );\n}\n\nSearchForm.propTypes={}\n\nexport default SearchForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card} from 'react-bootstrap';\nimport {StoreContext} from \"contexts\";\nimport get from \"lodash.get\";\n\nconst Decote=({discount,price}) => {\n\n    const { state } = React.useContext(StoreContext);\n    const {locale} = state\n\n    const [dashedPrice] = price.map( prc => Number(prc));\n    const formatedDashedPrice = new Intl.NumberFormat(locale, { style: 'currency', currency: 'EUR' }).format(dashedPrice);\n\n    const [discountNumber] = discount.map( discnt => Number(discnt));\n    const formatedDiscount = new Intl.NumberFormat(locale, { style: 'percent'}).format(-Number(discountNumber)/100)\n\n\n    return(\n        <>\n            <span className=\"bg-danger d-block text-white font-weight-bold\">{formatedDiscount}</span>\n            <del className=\"text-muted small mr-3\">{formatedDashedPrice}</del>\n        </>\n    );\n}\n\nDecote.propTypes={\n    discount:PropTypes.array.isRequired,\n    price:PropTypes.array.isRequired\n}\n\nconst Item=({item})=>{\n// console.log(\"[Item] item : \",item);\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {selectedItem} = state //TODO locale is needed for the date format\n    const {thumbnails,created_date,filename,id,embeds} = item;\n    const thumbnailURL = get(thumbnails,\"160px.url\",null);\n    const url = get(embeds,\"templated.url\",null);\n\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    let date = new Date(created_date);\n    date = date.toLocaleDateString('fr-FR', options);\n\n    const active = selectedItem.id===id?\"active\":\"\";\n    const handleClick = () =>\n        dispatch({\n            case:\"UPDATE_SELECTED_ITEM\",\n            payload:{\n                id,\n                url\n            }\n        });\n\n    return(\n        <Card className={active} onClick={handleClick}>\n            {thumbnailURL &&\n            <Card.Img variant=\"top\" src={thumbnailURL}/>\n            }\n            <Card.Body>\n                <Card.Title>{filename}</Card.Title>\n                {/*<Card.Text>*/}\n                {/*    {meta.description}*/}\n                {/*</Card.Text>*/}\n            </Card.Body>\n            <Card.Footer className=\"text-center\">\n                {/*{discount &&*/}\n                {/*    <Decote*/}\n                {/*        discount={meta.decote}*/}\n                {/*        price={meta.prix_barre}/>*/}\n                {/*}*/}\n                {date}\n            </Card.Footer>\n        </Card>\n    )\n}\n\nItem.propTypes={\n    item:PropTypes.object.isRequired,\n}\n\nexport default Item;","import get from \"lodash.get\";\n\n// const computeSearchContext = ({searchContexts}) =>\n//     Object.keys(searchContexts).reduce((params, key) => {\n//         let value = searchContexts[key];\n//         if(key===\"segments\")\n//             value = value.replace(\" | \",\"|\");\n//\n//         if (value)\n//             params[`contexts[${key}]`] = value;//contexts[buyerProfile]=promotion\n//         return params;\n//     }, {});\n\nconst computeFacetContext = ({searchFacets}) =>\n    searchFacets.reduce((params,facet) => {\n        // console.log(\"[computeFilterContext] facet : \",facet);\n        const filters = facet.list.reduce((params,filter)=>{\n            // console.log(\"filter.id : \",filter.id)\n            // console.log(\"filter.selected : \",filter.selected)\n            if(filter.selected){\n\n                params[`filters[${filter.type}][values][]`] = filter.filter;\n                params[`filters[${filter.type}][operations][]`]=\"and\"\n            }\n            return params;\n        },{});\n        // console.log(\"[computeFilterContext] filters : \",filters);\n        return{\n            ...params,\n            ...filters\n        }\n    },{});\n\nconst computeFilterContext = ({searchFilters}) =>\n    searchFilters.reduce((params,filter) => {\n        // console.log(\"[computeFilterContext] facet : \",filter);\n        params[`filters[${filter.id}][values][]`] = filter.value;\n        params[`filters[${filter.id}][operations][]`]= filter.operation;\n\n        // console.log(\"[computeFilterContext] filters : \",filters);\n        return params;\n    },{});\n\n\nconst paging = ({searchResultPerPage,searchResultPageIndex}) => {\n    // console.log(\"[paging] searchResultPerPage: \",searchResultPerPage,\"; searchResultPageIndex : \",searchResultPageIndex)\n    return{\n        offset:(searchResultPageIndex-1)*searchResultPerPage,\n        limit:searchResultPerPage\n    };\n}\n\nconst sort = ({searchSortBy,searchSortByDirection,searchSortListDirection}) => {\n    const [sortDirectionItem] = searchSortListDirection.filter(item => item.value === searchSortByDirection);\n    return{\n        sort:`${sortDirectionItem.symbol}${searchSortBy}`\n    };\n\n}\n\nconst fetchSearchData = async ({path = \"/\",state,dispatch}) => {\n    const {\n        widenEngine,\n        searchQuery,\n        //searchContexts,\n        searchFacets,\n        searchFilters,\n        searchResultPerPage,\n        searchResultPageIndex,\n        searchSortBy,\n        searchSortByDirection,\n        searchSortListDirection\n    } = state;\n\n    dispatch({\n        case: \"LOADING\",\n        payload: {\n            value:true\n        }\n    });\n    // console.log(\"searchQuery : \",searchQuery);\n    const params = {\n        query:searchQuery,\n        expand:\"embeds,thumbnails,file_properties\",\n        // ...computeSearchContext({searchContexts}),\n        // ...computeFacetContext({searchFacets}),\n        // ...computeFilterContext({searchFilters}),\n        ...paging({searchResultPerPage,searchResultPageIndex}),\n        ...sort({searchSortBy,searchSortByDirection,searchSortListDirection})\n    }\n\n    // console.log(\"[fetchSearchData] params : \",params);\n\n    try {\n        //TODO test response.status===200 || 204? sinon throw Error(response.status)\n        const response = await widenEngine(path, {params})\n        dispatch({\n            case: \"UPDATE_SEARCH_RESULTS\",\n            payload: {\n                searchResults: get(response,\"data\",{})\n            }\n        });\n    }catch (error) {\n        dispatch({\n            case: \"ERROR\",\n            payload: {\n                error\n            }\n        });\n    }\n    dispatch({\n        case: \"LOADING\",\n        payload: {\n            value:false\n        }\n    });\n};\n\nexport {\n    fetchSearchData\n}","import React from 'react';\nimport {StoreContext} from \"contexts\";\n\nconst PageLink=({index}) =>{\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        searchResultPageIndex\n    } = state\n\n    const className = searchResultPageIndex===index ? \"active\" : \"\";\n\n    const handleGoToPage = (e) =>{\n        e.preventDefault();\n        dispatch({\n            case: \"GOTO_RESULT_PAGE\",\n            payload:{\n                index\n            }\n        });\n    }\n\n    return(\n        <li>\n            <a href=\"#\" className={className} onClick={handleGoToPage}>{index}</a>\n        </li>\n    )\n}\n\nexport default PageLink;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport PageLink from \"./PageLink\";\n\nconst Nav=()=>{\n    const { state } = React.useContext(StoreContext);\n    const {\n        searchResultMaxPage\n    } = state\n\n    return (\n        <>\n            {[...Array(searchResultMaxPage)].map((e,i)=>\n                <PageLink key={i} index={i+1}/>\n            )}\n        </>\n\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport PageLink from \"./PageLink\";\n\nconst NavXL=()=>{\n    const { state } = React.useContext(StoreContext);\n    const {\n        searchResultPageIndex,\n        searchResultMaxPage\n    } = state\n\n    const dotBefore = searchResultPageIndex > 3 ? true : false;\n    const dotAfter = searchResultMaxPage - searchResultPageIndex >2 ? true : false;\n\n\n    let paging;\n    switch(true){\n        case searchResultPageIndex <=2 :\n            paging = [2,3];\n            break;\n        case searchResultMaxPage - searchResultPageIndex >1:\n            paging = [searchResultPageIndex-1,searchResultPageIndex,searchResultPageIndex+1];\n            break;\n        case searchResultMaxPage - searchResultPageIndex === 1:\n            paging = [searchResultPageIndex-1,searchResultPageIndex];\n            break;\n        default:\n            paging = [searchResultPageIndex-2,searchResultPageIndex-1];\n            break;\n    }\n\n    return (\n        <>\n            <PageLink index={1}/>\n            {dotBefore &&\n                <li className=\"interlayer\" >\n                    <FontAwesomeIcon icon={['fas','ellipsis-h']}/>\n                </li>\n            }\n            {paging.map((e,i)=>\n                <PageLink key={i} index={e}/>\n            )}\n            {dotAfter &&\n                <li className=\"interlayer\">\n                    <FontAwesomeIcon icon={['fas','ellipsis-h']}/>\n                </li>\n            }\n            <PageLink index={searchResultMaxPage}/>\n        </>\n\n    )\n}\n\nexport default NavXL;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst ResultPerPage=() =>{\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {\n        searchResultPerPage\n    } = state\n\n    const handleChange = (e) => {\n        dispatch({\n            case: \"UPDATE_RESULT_PER_PAGE\",\n            payload:{\n                value:e.target.value\n            }\n        });\n    }\n\n    return(\n        <li>\n            <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">\n                        {/*<FontAwesomeIcon icon={['fas','file']}/>*/}\n                        <FontAwesomeIcon icon={['far','file-alt']}/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                    as=\"select\"\n                    defaultValue={searchResultPerPage}\n                    onChange={handleChange}\n                    title=\"Result per page\"\n                >\n                    {[5,10,20,50,100].map( nb => <option key={nb} value={nb}>{nb}</option>)}\n                </Form.Control>\n                {/*<InputGroup.Append>*/}\n                {/*    <InputGroup.Text id=\"inputGroupPrepend\">*/}\n                {/*        /!*<FontAwesomeIcon icon={['fas','file']}/>*!/*/}\n                {/*        <FontAwesomeIcon icon={['far','file-alt']}/>*/}\n                {/*    </InputGroup.Text>*/}\n                {/*</InputGroup.Append>*/}\n            </InputGroup>\n        </li>\n    )\n}\n\nexport default ResultPerPage;","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst PageFormLink=() =>{\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {\n        isLoading,\n        searchResultPageIndex,\n        searchResultMaxPage\n    } = state\n\n    const[index,setIndex] = React.useState(searchResultPageIndex);\n\n    React.useEffect( () =>{\n        setIndex(searchResultPageIndex);\n    },[searchResultPageIndex])\n\n    const handleChange = (e) => {\n        setIndex(e.target.value);\n    }\n\n    const handleGoToPage = (e) =>{\n        e.preventDefault();\n\n        if(searchResultMaxPage<index)\n            return;\n\n        dispatch({\n            case: \"GOTO_RESULT_PAGE\",\n            payload:{\n                index\n            }\n        });\n    }\n\n\n    return(\n        <li>\n            <Form className=\"pT4__form-goto\" onSubmit={handleGoToPage}>\n                <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroupPrepend\">\n                            {/*<FontAwesomeIcon icon={['fas','file']}/>*/}\n                            <FontAwesomeIcon icon={['far','paper-plane']}/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"paging\"\n                        value={index}\n                        onChange={handleChange}\n                        title=\"Goto Page\"\n                    />\n                    <InputGroup.Append>\n                        <Button type=\"submit\" variant=\"outline-secondary\" disabled={isLoading}>\n                            <FontAwesomeIcon icon={['fas','sync-alt']}/>\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n            </Form>\n        </li>\n    )\n}\n\nexport default PageFormLink;","\nconst _WEAKREFERENCE_ = \"WEAKREFERENCE\";\n//TODO voir si avec SDL je peux passe l'URL des images!\nfunction getProperties(properties,context){\n    if(!properties) return;\n    return properties.reduce(function(bundle,property){\n        const key = property.name.split(\":\").pop();\n        let value = property.value || property.values;\n// console.log(\"property : \",property);\n        if(property.type === _WEAKREFERENCE_ &&\n            property.weakreference &&\n            property.weakreference.path\n        ){\n            property.weakreference.url=\n                `${context.files_endpoint}${encodeURI(property.weakreference.path)}`;\n            value = property.weakreference;\n        }\n\n        bundle[key]=value;\n        return bundle;\n    },{});\n};\n\n// function getWeakURL(filesEndpoint,nodePath){\n//     return `${filesEndpoint}${encodeURI(nodePath)}`;///encodeURIComponent()\n// };\n\nfunction getRandomString (length, format){\n    let mask = \"\";\n    if (format.indexOf(\"a\") > -1) mask += \"abcdefghijklmnopqrstuvwxyz\";\n    if (format.indexOf(\"A\") > -1) mask += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (format.indexOf(\"#\") > -1) mask += \"0123456789\";\n    if (format.indexOf(\"!\") > -1) mask += \"~`!@#$%^&*()_+-={}[]:\\\";'<>?,./|\\\\\";\n    let result = \"\";\n    for (let i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n};\n\nfunction getGQLWorkspace(workspace){\n    return workspace===\"default\"?\n        \"EDIT\":\n        workspace.toUpperCase()\n}\n\nexport {\n    getProperties,\n    getRandomString,\n    getGQLWorkspace\n}","import React from 'react';\nimport {StoreContext} from \"contexts\";\nimport {Dropdown,DropdownButton,Button} from 'react-bootstrap';\nimport {getRandomString} from \"misc/utils\";\nimport PageLink from \"./PageLink\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst Nav=()=>{\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        searchSortBy,\n        searchSortByDirection,\n        searchSortList,\n        searchSortListDirection,\n    } = state\n    const [sortByItem] = searchSortList.filter(item => item.value===searchSortBy);\n    const [sortDirectionItem] = searchSortListDirection.filter(item => item.value === searchSortByDirection);\n\n    const handleClickSortBy = (e) =>{\n        const sortBy = e.target.id;\n        dispatch({\n            case:\"UPDATE_SORT_ITEM\",\n            payload:{\n                sortBy\n            }\n        });\n    };\n\n    const handleClickSortByDirection = (e) =>\n        dispatch({\n            case:\"TOGGLE_SORT_DIRECTION\"\n        });\n\n//TODO lister les options avec value et key\n    //faire un dropdown button pour chaque option\n    //faire le dispatch qui va bien -> update propertie and\n    //     <i className=\"fas fa-sort-amount-up\"></i>\n    return (\n        <>\n            <li>\n                <DropdownButton\n                    alignRight\n                    variant=\"outline-dark\"\n                    title={`Sort by ${sortByItem.label}`}\n                    id={`sortBy_${getRandomString(6,\"aA#\")}`}\n                >\n                    {searchSortList.map((item,i)=>\n                        <Dropdown.Item key={i} id={item.value} onClick={handleClickSortBy}>{item.label}</Dropdown.Item>\n                    )}\n                    {/*<Dropdown.Divider />*/}\n                </DropdownButton>\n            </li>\n            <li>\n                <Button\n                    variant=\"outline-dark\"\n                    onClick={handleClickSortByDirection}\n                >\n                    <FontAwesomeIcon icon={['fas',sortDirectionItem.label]}/>\n                </Button>\n            </li>\n        </>\n    )\n}\n\nexport default Nav;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport {StoreContext} from \"contexts\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Nav from \"./component/Nav\";\nimport NavXL from \"./component/NavXL\";\nimport ResultPerPage from \"components/Paging/component/ResultPerPage\";\nimport PageFormLink from \"components/Paging/component/PageFormLink\";\nimport Sort from \"components/Paging/component/Sort\";\n\nconst Paging=(props)=>{\n\n    const { state,dispatch } = React.useContext(StoreContext);\n    const {\n        searchResultPerPage,\n        searchResultMaxPage,\n        searchResultAvailableAnswersCount\n    } = state\n\n    //TODO think about this\n    const showForm = searchResultMaxPage > 10;\n\n    if(!searchResultMaxPage)\n        return(<></>);\n\n    const handlePrev = (e) =>{\n        e.preventDefault();\n        dispatch({\n            case: \"PREVIOUS_RESULT_PAGE\"\n        });\n    }\n\n\n    const handleNext = (e) =>{\n        e.preventDefault();\n        dispatch({\n            case: \"NEXT_RESULT_PAGE\"\n        });\n    }\n\n    return(\n        <>\n            <ul className=\"pT4__paging results\">\n                <li className=\"results\">\n                    {/*<FontAwesomeIcon icon={['fas','hashtag']}/>*/}\n                    <h6>Résultats : {searchResultAvailableAnswersCount}</h6>\n                </li>\n                <Sort/>\n                <ResultPerPage/>\n\n                {showForm &&\n                <PageFormLink/>\n                }\n            </ul>\n            <ul className=\"pT4__paging\">\n                <li className=\"nav\">\n                    <a href=\"#\" onClick={handlePrev}>\n                        <FontAwesomeIcon icon={['fas','chevron-left']} />\n                    </a>\n                </li>\n\n                {searchResultMaxPage <=5 &&\n                <Nav/>\n                }\n\n                {searchResultMaxPage > 5 &&\n                <NavXL/>\n                }\n\n                <li className=\"nav\">\n                    <a href=\"#\" onClick={handleNext}>\n                        <FontAwesomeIcon icon={['fas','chevron-right']} />\n                    </a>\n                </li>\n            </ul>\n        </>\n\n    )\n}\n\nPaging.propTypes={}\n\nexport default Paging;","import React from 'react';\n// import logo from '../assets/logo.svg';\nimport spinner from \"assets/loader_4.gif\";\nimport 'components/App.scss';\n\nimport get from \"lodash.get\";\nimport {InputGroup, FormControl, Button, Row, Container,Col} from \"react-bootstrap\";\n\nimport {StoreContext} from \"contexts\";\nimport SearchForm from \"components/SearchForm\";\nimport Item from \"components/Item\";\nimport Facet from \"components/Facet\";\nimport {fetchSearchData} from \"misc/data\";\nimport CurrentFilter from \"components/CurrentFilter\";\nimport Paging from \"components/Paging\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faSortAmountDown,faSortAmountUp,faSyncAlt,faFile,faSearch,faPowerOff,faBan,faTimes,faUserCheck,faUserTag,faCrosshairs,faChevronLeft,faChevronRight,faHashtag,faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { faPaperPlane,faFileAlt,faCheckCircle,faThumbsUp,faUserCircle,faAddressCard} from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n    fab,\n    faSearch,\n    faPowerOff,\n    faCheckCircle,\n    faThumbsUp,\n    faBan,\n    faTimes,\n    faUserCheck,\n    faUserTag,\n    faUserCircle,\n    faAddressCard,\n    faCrosshairs,\n    faChevronLeft,\n    faChevronRight,\n    faHashtag,\n    faEllipsisH,\n    faFile,\n    faFileAlt,\n    faSyncAlt,\n    faPaperPlane,\n    faSortAmountDown,\n    faSortAmountUp\n);\n\nconst errorMsg = 'Oups something get wrong';\nconst Error= ({e}) => {\n    return(\n        <>\n            <h1>{errorMsg}</h1>\n            <p>{e.message}</p>\n        </>\n    );\n}\n\nconst App = (props) => {\n    const {state, dispatch} = React.useContext(StoreContext);\n    const {\n        context,\n        error,\n        isLoading,\n        searchAnswers,\n        searchIframe,\n        searchFacets,\n        needToFetch\n    } = state;\n\n    React.useEffect(() => {\n\n        // console.log(\"[APP] needToFetch : \",needToFetch);\n\n        const _fetchData = async () =>\n            await fetchSearchData({\n                path: \"/assets/search\",\n                state,\n                dispatch\n            });\n\n        if (needToFetch)\n            _fetchData();\n\n    }, [needToFetch])\n\n    if (error) return <Error e={error}/>;\n\n    return (\n        <Container className=\"pT4\">\n            <Row>\n                <Col>\n                    <SearchForm/>\n                    {/*<CurrentFilter/>*/}\n                    <Paging/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    {isLoading &&\n                    <img className=\"pT4__spinner\" src={spinner}/>\n                    }\n                    {!isLoading &&\n                    <div className={`pT4__result ${isLoading ? \"\" : \"fade-in\"}`}>\n                        {\n                            searchAnswers.map(item =>\n                                <Item\n                                    key={item.id}\n                                    item={item}\n                                    locale={state.locale}\n                                />\n                            )\n                        }\n                    </div>\n                        // searchIframe &&\n                        // <iframe frameBorder=\"0\" src={searchIframe} width=\"100%\" height=\"700px\"></iframe>\n                    }\n                </Col>\n                <Col xs=\"4\" sm=\"3\" md=\"4\" lg=\"3\">\n                    {/*<ul className=\"pT4__facet\">*/}\n                    {/*    {searchFacets.map( facet =>*/}\n                    {/*        <Facet*/}\n                    {/*            key={facet.id}*/}\n                    {/*            facet={facet}*/}\n                    {/*        />*/}\n                    {/*    )*/}\n                    {/*    }*/}\n                    {/*</ul>*/}\n                </Col>\n            </Row>\n        </Container>\n    );\n\n    //\n    //   const [query, setQuery] = React.useState();\n    //   const [categories, setCategories] = React.useState([]);\n    // const [iframe, setIframe] = React.useState();\n    //   const [search, setSearch] = React.useState({\n    //       url:\"/integrations/url\",\n    //       params: {\n    //           hideSearchBar: true,\n    //           query: query\n    //       }\n    //   });\n    //   // const [isLoading, setIsLoading] = React.useState(false);\n    //   const [isError, setIsError] = React.useState(false);\n    //\n    // React.useEffect(() => {\n    //   const fetchData = async () => {\n    //       const categories = await widen.get(\"/categories\");\n    //       console.log(\"categories : \",categories)\n    //       setCategories(get(categories,\"data.items\",[]));\n    //   };\n    //\n    //   fetchData();\n    //\n    // },[]);\n    //\n    //   React.useEffect(() => {\n    //       if(search.params.query){\n    //           const fetchData = async () => {\n    //               setIframe(false);\n    //               setIsError(false);\n    //               setIsLoading(true);\n    //               try {\n    //                   const instantSearch = await widen.get(search.url,{params:search.params});\n    //                   console.log(\"instantSearch : \", instantSearch.data);\n    //                   //const frameURL = URL.createObjectURL(instantSearch.data);\n    //                   setIframe(instantSearch.data.url);\n    //               } catch (error) {\n    //                   setIsError(true);\n    //               }\n    //               setIsLoading(false);\n    //           };\n    //           fetchData();\n    //       }\n    //   },[search])\n    //\n    //\n    //   window.addEventListener('message', event =>{\n    //       //TODO verifier si j'ai un event.data.items[0].embed_code sinon laisser passer\n    //       // console.log(\"message : \",event.data);\n    //       // const embedCode = event.data.items[0].embed_code;\n    //       // console.log(embedCode);\n    //\n    //       // Insert embedCode into user’s html content\n    //       // Close iframe\n    //   })\n    //\n    // const handleChange = (e) =>{\n    //     const value= e.target.value;\n    //     console.log(\"value : \",value);\n    //     setQuery(value);\n    // }\n    // const handleSearch = () =>{\n    //     console.log(\"handleSearch query : \",query);\n    //       const params = {...search.params,query}\n    //     setSearch({...search,params});\n    // }\n    //\n    // const handleCategory = (e,category) => {\n    //     console.log(\"handleCategory category : \",category);\n    //     e.preventDefault();\n    //     // const _query = `${query}&assetcategory:${category.id}`;//encodeURI();\n    //     // const params = {...search.params,query:_query}\n    //     const params = {...search.params,assetcategory:category.id};\n    //     setSearch({...search,params});\n    // }\n    //\n    // return (\n    //     <Container fluid>\n    //         <Row>\n    //             <Col>\n    //                 <ul>\n    //                 {categories.map(category =>\n    //                     <li key={category.id}>\n    //                         <a href=\"#\" onClick={ e => handleCategory(e,category)}>\n    //                             {category.name}\n    //                         </a>\n    //                     </li>\n    //                   )}\n    //                 </ul>\n    //             </Col>\n    //             <Col xs={10}>\n    //                 {isError && <div>Something went wrong ...</div>}\n    //\n    //                 <InputGroup className=\"mb-3\">\n    //                     <FormControl\n    //                         placeholder=\"Search text\"\n    //                         onChange={handleChange}\n    //                     />\n    //                     <InputGroup.Append>\n    //                         <Button\n    //                             variant=\"outline-secondary\"\n    //                             onClick={handleSearch}>\n    //                             Search\n    //                         </Button>\n    //                     </InputGroup.Append>\n    //                 </InputGroup>\n    //                 {isLoading &&\n    //                   <img src={spinner}/>\n    //                 }\n    //                 {/*<img src={spinner}/>*/}\n    //                 {iframe &&\n    //                     <iframe frameBorder=\"0\" src={iframe} width=\"100%\" height=\"700px\"></iframe>\n    //                 }\n    //             </Col>\n    //         </Row>\n    //     </Container>\n    //\n    //\n    // );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Ajv = ({item,errors})=> {\n    return(\n        <div>\n            <h1>Validation errors</h1>\n            <p>An error occurred when validating <b>{item}</b></p>\n            <ul>\n                {errors.map( (error,i) =>\n                    <li>\n                        {error.dataPath} : {error.message}\n                    </li>)\n                }\n            </ul>\n        </div>\n    )\n}\n\nAjv.propTypes={\n    item:PropTypes.string.isRequired,\n    errors:PropTypes.array.isRequired\n};\n\nexport default Ajv;","// import jCustomer from \"./definitions/jCustomer\";\n// import jContent from \"./definitions/jContent\";\n// import gql from \"./definitions/gql\";\nimport {workspace} from \"douane/lib/config\";\n\nexport default{\n    context:{\n        title:\"context validation schema \",\n        description:\"context is an object provided by the page in charge to load the app\",\n        // definitions: {\n        //     jContent:jContent,\n        //     jCustomer:jCustomer,\n        //     gql:gql\n        // },\n        type:\"object\",\n        // properties:{\n        //     jContent:{$ref:\"#jContent\"},\n        //     gql:{$ref:\"#gql\"},\n        //     jCustomer:{$ref:\"#jCustomer\"}\n        // },\n        properties:{\n            //\"fr\" or \"fr-FR\" TODO voir si je suis permissif et accpete 'fr'\n            host:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n            },\n            workspace:{\n                type:\"string\",\n                enum:workspace,\n                default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n            },\n            scope:{\n                type:\"string\",\n                pattern:\"[a-zA-Z0-9-_]+\",//iso\n                default:process.env.REACT_APP_JCONTENT_SCOPE\n            },\n            widen:{\n                type:\"object\",\n                properties:{\n                    url:{\n                        type:\"string\",\n                        format:\"uri\",\n                        default:process.env.REACT_APP_WIDEN_ENDPOINT //could be null in case of edit!\n                    },\n                    site:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_SITE\n                    },\n                    token:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_TOKEN\n                    },\n                    version:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_VERSION\n                    },\n                    lazyLoad:{\n                        type:\"boolean\",\n                        default:JSON.parse(process.env.REACT_APP_WIDEN_LAZY_LOAD)\n                    },\n                    resultPerPage:{\n                        type:\"integer\",\n                        default:Number.parseInt(process.env.REACT_APP_WIDEN_RESULT_PER_PAGE, 10)\n                    },\n                    mountPoint:{\n                        type:\"string\",\n                        default:process.env.REACT_APP_WIDEN_MOUNT_POINT\n                    }\n\n                    // locale:{\n                    //     type:\"object\",\n                    //     properties:{\n                    //         user:{\n                    //             type:\"string\",\n                    //             pattern:\"^[a-z]{2}$\",//\"[a-z]{2}(?:-[A-Z]{2})?\"\n                    //             default:process.env.REACT_APP_WIDEN_USER_LOCALE\n                    //         },\n                    //         search:{\n                    //             type:\"string\",\n                    //             pattern:\"^[a-z]{2}-[A-Z]{2}$\",\n                    //             default:process.env.REACT_APP_WIDEN_SEARCH_LOCALE\n                    //         }\n                    //     },\n                    //     required: [\"user\", \"search\"],\n                    //     additionalProperties:false\n                    //\n                    // },\n                },\n                required: [\"url\", \"site\",\"token\",\"version\",\"lazyLoad\",\"resultPerPage\",\"mountPoint\"],//,\"locale\"\n                additionalProperties:false\n            },\n            // cdp_endpoint:{\n            //     type:\"string\",\n            //     format:\"uri\",\n            //     default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n            // },\n            // cdp_token:{\n            //     type:\"string\",\n            //     default:process.env.REACT_APP_JCUSTOMER_TOKEN\n            // },\n            gql_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n            },\n            gql_authorization:{\n                type:\"string\",\n                default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n            },\n            // gql_variables:{\n            //     type:\"object\",\n            //     properties:{\n            //         language:{\n            //             type:\"string\",\n            //             pattern:\"[a-z]{2}(?:_[A-Z]{2})?\",//\"fr\" or \"fr_FR\"\n            //             default:process.env.REACT_APP_WIDEN_USER_LOCALE\n            //         }\n            //\n            //     },\n            //     required: [\"language\"],\n            //     additionalProperties:false\n            // },\n            // files_endpoint:{\n            //     type:\"string\",\n            //     format:\"uri\",\n            //     default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n            // }\n        },\n        required: [\n            \"host\",\n            \"workspace\",\n            \"scope\",\n            \"widen\",\n            // \"cdp_endpoint\",\n            // \"cdp_token\",\n            \"gql_endpoint\",\n            \"gql_authorization\",\n            // \"gql_variables\",\n            // \"files_endpoint\"\n        ],\n        additionalProperties:false\n    }\n}","// const validMark=\"[*]\";\n// const score_splitPattern=\"::\";\n\nconst workspace = [\"default\",\"live\"];\n// const cnd_type = {\n//     QNA:\"game4nt:qna\",\n//     WARMUP:\"game4nt:warmup\"\n// }\n// const consent_status={\n//     GRANTED:\"GRANTED\",\n//     DENIED:\"DENIED\",\n//     REVOKED:\"REVOKED\"\n// };\n\nexport {\n    workspace,\n    // cnd_type,\n    // validMark,\n    // consent_status,\n    // score_splitPattern\n}","import * as Ajv from \"ajv\";\nimport schema from \"douane/lib/schema\";\n// import {getGQLWorkspace} from \"misc/utils\";\n\nconst ajv = new Ajv({useDefaults:true});\n//TODO le try catch doit etre fait ici et un component react doit etre retourne\nconst contextValidator = (context) =>{\n\n    const valid = ajv.validate(schema.context, context);\n    if (!valid)\n        // throw new Error(`An error occurred during the validation of context object, errors : ${JSON.stringify(ajv.errors)}`);\n        throw {item:\"Context configuration object\",errors:ajv.errors};\n    // context.gql_variables.workspace = getGQLWorkspace(context.workspace);\n    return context;\n}\n\nexport {\n    contextValidator\n}","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport axios from \"axios\";\n\nimport {getRandomString} from \"misc/utils\";\n// import {fetchSearchData} from \"misc/data\";\n\n// import {getRandomString} from \"misc/utils\";\n// import {syncQuizScore} from \"misc/tracker\";\n// import QuizMapper from \"components/Quiz/QuizModel\";\n\nconst init = context => {\n    const widenEngine = axios.create({\n        baseURL:`${context.widen.url}/${context.widen.version}`,\n        headers:{\n            \"Content-Type\":\"application/json\",\n            Accept:\"application/json\",\n            Authorization:`Bearer ${context.widen.site}/${context.widen.token}`\n        },\n        responseType:\"json\",\n        timeout:6000\n    });\n    // widenEngine.interceptors.request.use((config) => {\n    //     config.params = config.params || {};\n    //     config.params[\"token\"] = context.widen.token;\n    //     config.params[\"action\"] =\"widenSearch\";//wordWheel fuzzy\n    //     config.params[\"all_items\"] =\"true\";\n    //     config.params[\"user_locale\"] =context.widen.locale.user;\n    //     config.params[\"search_locale\"] =context.widen.locale.search;\n    //     return config;\n    // });\n\n    const graphQLEngine = axios.create({\n        baseURL:context.gql_endpoint,\n        headers:{\n            // \"Content-Type\":\"application/json\",\n            // Accept:\"application/json\",\n            Authorization:context.gql_authorization\n        },\n        responseType:\"json\",\n        // withCredentials: true,//important to send the context-profile-id cookie\n        timeout:3000\n    });\n    // //\n    // profileEngine.interceptors.request.use((config) => {\n    //     config.headers = config.headers || {};\n    //     config.headers[\"Content-Type\"] = \"application/json\";\n    //     config.headers[\"Accept\"] =\"application/json\";\n    //     return config;\n    // });\n\n    const {lazyLoad,resultPerPage,mountPoint} = context.widen;\n\n    return {\n        context,\n        //locale:context.widen.locale.search,\n        error:null,\n        isLoading:false,\n        needToFetch:!lazyLoad,//false,\n        //needToFetch:false,\n        // profileEngine,\n        // userProfile:{},\n        selectedItem:{},\n        widenEngine,\n        mountPoint,\n        graphQLEngine,\n        searchAnswers:[],\n        searchIframe:null,//not needed if I use searchAnswers\n        //searchContexts:{},\n        searchSortBy:\"created_date\",//newest assets first //TODO voir si je passe ça configurable au niveau jahia\n        searchSortByDirection:\"DESC\",\n        searchSortList:[\n            {value:\"created_date\",label:\"Date Added\"},\n            {value:\"last_update_date\",label:\"Date Updated\"},\n            {value:\"filename\",label:\"Filename\"},\n            {value:\"file_format\",label:\"File Format\"},\n            {value:\"file_size\",label:\"File Size\"},\n\n        ],\n        searchSortListDirection:[\n            {value:\"ASC\",label:\"sort-amount-up\",symbol:\"\"},\n            {value:\"DESC\",label:\"sort-amount-down\",symbol:\"-\"}],\n        searchQuery:null,\n        searchFacets:[],\n        searchFilters:[],\n        searchBanners:[],\n        searchResultPerPage:Number.parseInt(resultPerPage,10),//be sure it is an integer base 10\n        searchResultMaxPage:null,\n        searchResultPageIndex:1,\n        searchResultAvailableAnswersCount:null\n    }\n}\n\nconst reducer = (state, action) => {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"UPDATE_TEXT_QUERY\": {\n            console.debug(\"[STORE] UPDATE_TEXT_QUERY - query: \",payload.searchQuery);\n            return {\n                ...state,\n                searchQuery:payload.searchQuery\n            }\n        }\n        case \"RESET_TEXT_QUERY\": {\n            console.debug(\"[STORE] RESET_TEXT_QUERY\");\n            return {\n                ...state,\n                searchQuery:\"\",\n                needToFetch:true\n            }\n        }\n        case \"EXECUTE_QUERY\": {\n            console.debug(\"[STORE] EXECUTE_QUERY\");\n            return {\n                ...state,\n                searchResultPageIndex:1,//new search reset paging\n                needToFetch:true\n            }\n        }\n        case \"UPDATE_SELECTED_ITEM\": {\n            const {id} = payload;\n            const {graphQLEngine,mountPoint} = state\n            console.debug(\"[STORE] UPDATE_SELECTED_ITEM - payload: \",payload);\n\n            const synchWidenPickerInterface = async () => {\n                //Call jahia to generate the UUID of the virtual node\n                const query = `query getWiden($workspace: Workspace!,$path: String!){\n                                  response: jcr(workspace: $workspace) {\n                                    node:nodeByPath(path:$path){\n                                      uuid\n                                    }\n                                  }\n                                }`;\n                const variables = {\n                    workspace:\"EDIT\",\n                    path:`${state.mountPoint}/${id}`\n                }\n                const data = {\n                    query,\n                    variables\n                }\n                try {\n                    const response = await graphQLEngine.post(\"\",data);\n                    // console.log(\"response : \",response);\n                    const uuid = response.data.data.response.node.uuid;\n                    return uuid;\n                    console.log(\"jContent uuid is generated : \",uuid);\n                } catch (error) {\n                    console.error(\"oups ! something wrong with graphQL : \",error)\n                }\n            }\n\n            synchWidenPickerInterface().then( uuid => {\n                console.log(\"[STORE] UPDATE_SELECTED_ITEM - window.widenPickerInterface: \",window.widenPickerInterface);\n                // window.widenPickerInterface.add(`${state.mountPoint}/${id}`);\n                window.widenPickerInterface.add(uuid);\n                console.log(\"[STORE] UPDATE_SELECTED_ITEM - window.widenPickerInterface.data: \",window.widenPickerInterface.data);\n            })\n\n            return {\n                ...state,\n                selectedItem:payload\n            };\n        }\n        case \"UPDATE_SEARCH_RESULTS\": {\n            console.debug(\"[STORE] UPDATE_SEARCH_RESULTS - searchResults: \",payload.searchResults);\n            //sort,start_answer\n            const {items,total_count} = payload.searchResults\n            const {searchResultPerPage,searchResultPageIndex} = state;\n            let {searchResultMaxPage} = state;\n            const searchResultAvailableAnswersCount = total_count;\n\n            //TODO si catalogue empty gerer le cas avec un boolean\n\n            //refine calatog based on existing filters !\n            // catalogs.map(facet => {\n            //     facet.list.map(filter => {\n            //         filter.id = getRandomString(8,\"#aA\");\n            //         return filter;\n            //     })\n            //     return facet;\n            // });\n\n            //new search\n            if(searchResultPageIndex === 1)\n                searchResultMaxPage =Math.ceil(searchResultAvailableAnswersCount/searchResultPerPage);\n\n            return {\n                ...state,\n                searchAnswers:items,\n                // searchFacets:catalogs,\n                // searchFilters:filters,\n                // searchBanners:banners || [],\n                searchResultAvailableAnswersCount,\n                searchResultMaxPage,\n                needToFetch:false\n            };\n        }\n        case \"TOGGLE_FILTER\": {\n            const {filter} = payload;//fitler is an element of  widen.catalogs.list\n            console.debug(\"[STORE] TOGGLE_ANSWER -> filter id :\",filter.id);\n\n            let [facet,index] = state.searchFacets.reduce((result,facet,index)=>{\n                if(facet.id === filter.type)\n                    result = [facet,index];\n                return result;\n            },[]);\n\n            const list = facet.list.map(_filter => {\n                if(_filter.id === filter.id)\n                    return {\n                        ..._filter,\n                        selected:!_filter.selected\n                    };\n                return _filter;\n            });\n\n            facet = {\n                ...facet,\n                list\n            }\n\n            const searchFacets = state.searchFacets.slice();\n            searchFacets.splice(index, 1,facet);\n\n            console.debug(\"[STORE] searchFacets :\",searchFacets);\n\n            return {\n                ...state,\n                searchFacets,\n                searchResultPageIndex:1,//new search reset paging\n                needToFetch:true\n            };\n        }\n        case \"REMOVE_FILTER\": {\n            const {filter} = payload;//fitler is an element of  widen.filters\n            console.debug(\"[STORE] REMOVE_FILTER -> filter id :\",filter.id);\n\n            const searchFacets = state.searchFacets.filter( facet => facet.id !== filter.id);\n            // searchFacets.splice(index, 1,facet);\n\n            console.debug(\"[STORE] searchFacets :\",searchFacets);\n            //#2 remove for existing filters\n            const searchFilters = state.searchFilters.filter(_filter => _filter.id !== filter.id);\n\n            return {\n                ...state,\n                searchFacets,\n                searchFilters,\n                searchResultPageIndex:1,//new search reset paging\n                needToFetch:true\n            };\n        }\n        case \"ERROR\": {\n            console.debug(\"[STORE] ERROR - searchResults: \",payload.error);\n            return {\n                ...state,\n                error:payload.error\n            };\n        }\n        case \"LOADING\": {\n            console.debug(\"[STORE] LOADING - value: \",payload.value);\n            return {\n                ...state,\n                isLoading:payload.value\n            };\n        }\n        case \"PREVIOUS_RESULT_PAGE\": {\n            console.debug(\"[STORE] PREVIOUS_RESULT_PAGE\");\n\n            if(state.searchResultPageIndex <= 1)\n                return {\n                ...state\n            }\n\n            const searchResultPageIndex = state.searchResultPageIndex -1;\n\n            return {\n                ...state,\n                needToFetch:true,\n                searchResultPageIndex\n            };\n        }\n        case \"NEXT_RESULT_PAGE\": {\n            console.debug(\"[STORE] NEXT_RESULT_PAGE\");\n            const {searchResultMaxPage} = state;\n\n            if(state.searchResultPageIndex >= searchResultMaxPage)\n                return {\n                    ...state\n                }\n\n            const searchResultPageIndex = state.searchResultPageIndex +1;\n\n            return {\n                ...state,\n                needToFetch:true,\n                searchResultPageIndex\n            };\n        }\n        case \"GOTO_RESULT_PAGE\": {\n            console.debug(\"[STORE] GOTO_RESULT_PAGE payload : \",payload);\n            const index = Number(payload.index);\n            const {searchResultMaxPage} = state;\n\n            if(!index || index < 1 || index > searchResultMaxPage)\n                return {\n                    ...state\n                }\n\n            return {\n                ...state,\n                needToFetch:true,\n                searchResultPageIndex:index\n            };\n        }\n        case \"UPDATE_RESULT_PER_PAGE\": {\n            console.debug(\"[STORE] UPDATE_RESULT_PER_PAGE payload : \",payload);\n            const {value} = payload;\n\n            return {\n                ...state,\n                searchResultPerPage:value,\n                searchResultPageIndex:1,\n                needToFetch:true\n            };\n        }\n        case \"UPDATE_SORT_ITEM\": {\n            console.debug(\"[STORE] UPDATE_SORT_ITEM payload : \",payload);\n            const {sortBy} = payload;\n\n            return {\n                ...state,\n                searchSortBy:sortBy,\n                needToFetch:true\n            };\n        }\n        case \"TOGGLE_SORT_DIRECTION\": {\n            console.debug(\"[STORE] TOGGLE_SORT_DIRECTION\");\n            const {searchSortByDirection,searchSortListDirection} = state;\n            const [sortDirectionItem] = searchSortListDirection.filter(item => item.value != searchSortByDirection);\n\n            return {\n                ...state,\n                searchSortByDirection:sortDirectionItem.value,\n                needToFetch:true\n            };\n        }\n        default:\n            return {\n                ...state,\n                error:new Error(`[STORE] action case '${action.case}' is unknown `)\n            };\n            // throw new Error(`[STORE] action case '${action.case}' is unknown `);\n    };\n}\n\nexport const Store = props => {\n    const [state, dispatch] = React.useReducer(\n        reducer,\n        props.context,\n        init\n    );\n    return (\n        <StoreContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\nimport * as serviceWorker from 'misc/serviceWorker';\n\nimport AjvError from \"components/Error/Ajv\";\nimport {contextValidator} from \"douane\";\nimport {Store} from \"components/Store\";\n\nconst widenPickerInterface = {\n    _context: {},\n    _data: [],\n\n    get context() {\n        return this._context;\n    },\n    get data(){\n        return this._data;\n    },\n\n    set context(contextData) {\n        this._context = contextData;\n    },\n\n    set data(data){\n        this._data = data;\n    },\n\n    load: function (values) {\n        console.log(values.d);\n        if (values.d !== undefined && Array.isArray(values.d)) {\n            widenPickerInterface.data = Array.from(values.d);\n        }\n    },\n\n    add: function (path, product) {\n        this.data = [...this.data,path];\n        return this.data;\n    },\n\n    remove: function (path) {\n        this.data = this.data.filter( item => !item.endsWith(path) );\n    },\n\n    removeAt: function (index) {\n        if(index !== -1) {\n            this.data = this.data.splice(index, 1);\n            return this.data;\n        }\n        return null;\n    },\n\n    removeAll: function () {\n        widenPickerInterface.data = [];\n    },\n\n    // get: function () {\n    //     return productPickerData.data;\n    // }\n\n};\n\nconst render = (target,context) =>{\n    try{\n        // console.log(\"context : \",JSON.stringify(context));\n        context = contextValidator(context);\n        const headers={};\n        // if(context.gql_authorization)\n        //     headers.Authorization=context.gql_authorization;\n\n        // const client = new ApolloClient({\n        //     uri:context.gql_endpoint,\n        //     headers\n        // })\n\n        ReactDOM.render(\n            <Store context={context}>\n                <App />\n            </Store>,\n            document.getElementById(target)\n        );\n\n        // ReactDOM.render(\n        //     <React.StrictMode>\n        //         <Store context={context}>\n        //             {/*<ApolloProvider client={client}>*/}\n        //             <App />\n        //             {/*</ApolloProvider>*/}\n        //         </Store>\n        //     </React.StrictMode>,\n        //     document.getElementById(target)\n        // );\n\n    }catch(e){\n        console.error(\"error : \",e);\n        //TODO create a generic error handler\n        ReactDOM.render(\n            <AjvError\n                item={e.item}\n                errors={e.errors}\n            />,\n            document.getElementById(target)\n        );\n    }\n\n    // ReactDOM.render(\n    //     <React.StrictMode>\n    //         <App />\n    //     </React.StrictMode>,\n    //     document.getElementById(target)\n    // );\n}\n\nwindow.widenPicker = render;\nwindow.widenPickerInterface = widenPickerInterface;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}